<Dialog team="t1">
<Participants>
<Person nickname="klimberu"/>
<Person nickname="Iceman"/>
<Person nickname="iceman"/>
<Person nickname="ireal"/>
<Person nickname="spider"/>
<Person nickname="_ireal"/>
<Person nickname="Spider"/>
</Participants>
<Topics/>
<Body>
<Turn nickname="klimberu">
<Utterance genid="1" ref="-1" time="16/12/2008 11:36:01">joins the room</Utterance>
</Turn>
<Turn nickname="Iceman">
<Utterance genid="2" ref="-1" time="16/12/2008 11:36:38">joins the room</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="3" ref="-1" time="16/12/2008 11:39:58">joins the room</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="4" ref="-1" time="16/12/2008 11:41:31">joins the room</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="5" ref="-1" time="16/12/2008 11:42:30">joins the room</Utterance>
</Turn>
<Turn nickname="Iceman">
<Utterance genid="6" ref="-1" time="16/12/2008 11:42:41">leaves the room</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="7" ref="-1" time="16/12/2008 11:42:43">hello</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="8" ref="-1" time="16/12/2008 11:42:54">hi</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="9" ref="-1" time="16/12/2008 11:43:12">shall we start with presentations?</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="10" ref="-1" time="16/12/2008 11:43:34">yes</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="11" ref="-1" time="16/12/2008 11:43:43">i will start first</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="12" ref="-1" time="16/12/2008 11:43:47">yes , let's start</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="13" ref="-1" time="16/12/2008 11:45:09">My name is Adrian Airinei from SPBA and I represent my company XBayes which promotes the algorithm Naive Bayes</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="14" ref="-1" time="16/12/2008 11:45:30">hi, klimberu. my name is Gabriel Sandu, from SPBA and I will represent my company's views on the K-Means algorithms</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="15" ref="-1" time="16/12/2008 11:46:35">Hello, I'm Daniel Baluta , SPBA section , and i will advertise for Support Vector Machine algorithm</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="16" ref="-1" time="16/12/2008 11:46:49">hello, my name is Smaranda Dorin, i am taking the SPBA master, and today i will present and support the ART - Adaptive Resonance Theory neural architecture, for usage in my company - NeuronDevelopment</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="17" ref="-1" time="16/12/2008 11:47:10">nice to meet all of you :).</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="18" ref="-1" time="16/12/2008 11:47:21">the same here</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="19" ref="-1" time="16/12/2008 11:47:29">nice to meet tou too</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="20" ref="-1" time="16/12/2008 11:47:41">i propose all of us to present their field of expertise :)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="21" ref="-1" time="16/12/2008 11:47:54">i agree</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="22" ref="-1" time="16/12/2008 11:47:59">in the order we presented ourselves</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="23" ref="-1" time="16/12/2008 11:48:36">so, klimberu, please tell us about Naive Bayes</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="24" ref="-1" time="16/12/2008 11:48:42">Na&amp;iuml;ve Bayes is a classifier technique based on conditional probabilities.</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="25" ref="-1" time="16/12/2008 11:49:11">It uses Bayes' Theorem</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="26" ref="-1" time="16/12/2008 11:49:43">This theorem involves a formula that calculates a probability by counting the frequency of values and combinations of values in the historical data.</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="27" ref="-1" time="16/12/2008 11:50:46">The probability of an event occurring is given by the probability of another event that has already occurred.</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="28" ref="-1" time="16/12/2008 11:52:20">The theorem says that if B represents the dependent event and A represents the prior event then Prob(B given A) = Prob(A and B)/Prob(A)</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="29" ref="-1" time="16/12/2008 11:53:23">So, in order to calculate the the probability of B given A, the algorithm counts the number of cases where A and B occur together and divides it by the number of cases where only A occurs</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="30" ref="-1" time="16/12/2008 11:55:29">sorry to intervene, but i would like to ask about how Naive Bayes uses these formulas for classification</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="31" ref="-1" time="16/12/2008 11:56:11">the time required for the algorithm to make the classification is linear, and this results in a fast processing</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="32" ref="-1" time="16/12/2008 11:56:19">i think we should get an overview of all algorithms and then proceed with detailed questions</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="33" ref="-1" time="16/12/2008 11:57:11">I will outline another one- or two idea and I will let you ask the questions or continue with your preszentations</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="34" ref="-1" time="16/12/2008 11:57:39">please proceed</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="35" ref="-1" time="16/12/2008 11:58:06">you can go on , i am very interested</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="36" ref="-1" time="16/12/2008 11:58:33">Another advantage of the algorithm si that is simple to implement, as being a linear algorithm</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="37" ref="-1" time="16/12/2008 11:59:06">Despite this it can often outperform more sophisticated classification methods.</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="38" ref="-1" time="16/12/2008 11:59:51">of course, we are talking about specific cases, right?</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="39" ref="-1" time="17/12/2008 12:00:23">yes</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="40" ref="38" time="17/12/2008 12:00:31"/>
</Turn>
<Turn nickname="ireal">
<Utterance genid="41" ref="-1" time="17/12/2008 12:00:32"/>
</Turn>
<Turn nickname="ireal">
<Utterance genid="42" ref="-1" time="17/12/2008 12:00:34"/>
</Turn>
<Turn nickname="ireal">
<Utterance genid="43" ref="-1" time="17/12/2008 12:01:00">sorry , :)</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="44" ref="-1" time="17/12/2008 12:01:43">i think spider , can share its presentation</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="45" ref="-1" time="17/12/2008 12:02:00">The last but not the least remarque is that its independence allows parameters to be estimated on different data sets</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="46" ref="-1" time="17/12/2008 12:02:18">i think klimberu still have important things to say</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="47" ref="-1" time="17/12/2008 12:02:44">ok</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="48" ref="-1" time="17/12/2008 12:02:51">For example: estimate content features from messages with headers omitted or estimate header features from messages with content missing</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="49" ref="-1" time="17/12/2008 12:03:20">for example, Naive Bayes is one of the best techniques for complex real world situations, such as he just described</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="50" ref="-1" time="17/12/2008 12:03:32">Furthermore it requires a small amount of training data to estimate the parameters (means and variances of the variables) necessary for classification.</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="51" ref="-1" time="17/12/2008 12:03:54">yes, that IS an important aspect</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="52" ref="47" time="17/12/2008 12:03:55">can you estimate how many units of data are required for a good training</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="53" ref="-1" time="17/12/2008 12:04:19">for now these are the main ideas I wanted to outline</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="54" ref="-1" time="17/12/2008 12:04:51">ok. then i shall start my presentation</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="55" ref="-1" time="17/12/2008 12:04:54">is that ok?</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="56" ref="-1" time="17/12/2008 12:05:02">yes</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="57" ref="-1" time="17/12/2008 12:05:12">i agree</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="58" ref="-1" time="17/12/2008 12:05:29">K-means is a technique inspired by R^n vectorial spaces</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="59" ref="-1" time="17/12/2008 12:05:54">it involves classifying a set of points into k clusters of points (therefore the name )</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="60" ref="-1" time="17/12/2008 12:06:03">each cluster having a center called centroid</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="61" ref="-1" time="17/12/2008 12:06:50">k and n are independent?</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="62" ref="-1" time="17/12/2008 12:07:01">the clusters are picked such as the points in them minimize a formula of variance from the center: V= sum from i =1 to k of sum for each point in cluster Si of (xi - miu i) squared</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="63" ref="-1" time="17/12/2008 12:07:06">yes</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="64" ref="-1" time="17/12/2008 12:07:23">k is actually picked as an input parameter</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="65" ref="-1" time="17/12/2008 12:07:35">is there any restriction to them?</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="66" ref="-1" time="17/12/2008 12:07:37">and best heuristic is somewhere around the square root of n</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="67" ref="-1" time="17/12/2008 12:07:39"/>
</Turn>
<Turn nickname="spider">
<Utterance genid="68" ref="-1" time="17/12/2008 12:08:14">no restriction whatsoever. problem is that if we pick k in a bad way, the algorithm will take a long time to converge</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="69" ref="-1" time="17/12/2008 12:08:22">i see , so you can choose any values for k , but if you correlate it with n you get better results?</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="70" ref="-1" time="17/12/2008 12:08:31">i see</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="71" ref="-1" time="17/12/2008 12:08:46">it is convergent in any case?</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="72" ref="-1" time="17/12/2008 12:09:17">the algorithm is iterative: we pick random center points (can be outside the set of initial points) and we repeat an iteration of moving these centroids to the new calculated cluster center</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="73" ref="-1" time="17/12/2008 12:09:44">yes, it is convergent in any case, but it doesn't have a guaranteed global minimum</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="74" ref="-1" time="17/12/2008 12:10:20">which means, the algorithm is not entirely safe. It was observed though that in real data simulations, it's always convergent</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="75" ref="-1" time="17/12/2008 12:10:35">Different initial partitions can result in different final clusters. ?</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="76" ref="-1" time="17/12/2008 12:10:41">and, very fast, almost log(n) steps</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="77" ref="75" time="17/12/2008 12:11:09">yes, that's the weak part of this algorithm: choosing the initial &amp;quot;random&amp;quot; clusters and k will affect it.</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="78" ref="-1" time="17/12/2008 12:11:49">the algorithm was discovered in 1956, but a recent paper from 2006 proved that there's a technique for choosing these parameters in a way that is always convergent and 2...10 times faster</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="79" ref="-1" time="17/12/2008 12:12:23">the initial &amp;quot;seeding&amp;quot; process will take some time, but it will actually cut down on computations.</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="80" ref="-1" time="17/12/2008 12:12:36">what practical applications does it have?</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="81" ref="-1" time="17/12/2008 12:12:37">the variant is called k-means++ :)</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="82" ref="-1" time="17/12/2008 12:12:44">:)</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="83" ref="80" time="17/12/2008 12:12:45">i'm glad you asked</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="84" ref="-1" time="17/12/2008 12:13:11">common applications include border detection and object recognition in image processing</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="85" ref="-1" time="17/12/2008 12:13:50">nice</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="86" ref="-1" time="17/12/2008 12:14:02">very useful</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="87" ref="-1" time="17/12/2008 12:14:08">there is a small assumption to the algorithm though: it assumes that using that formula for V is enough to characterise a cluster. Some data are different though</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="88" ref="-1" time="17/12/2008 12:14:18">it is used too in data mining application</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="89" ref="88" time="17/12/2008 12:14:35">I think the algorithm is called Lloyd's</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="90" ref="-1" time="17/12/2008 12:14:57">that's about all there is to know about K-means. it's simple to understand and easy to implement.</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="91" ref="-1" time="17/12/2008 12:15:35">ok, spider very clear</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="92" ref="-1" time="17/12/2008 12:16:19">now i'll start the presentation for my algorithm</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="93" ref="-1" time="17/12/2008 12:16:26">feel free to interrupt me</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="94" ref="-1" time="17/12/2008 12:16:41">whenever you find that a thing is not clear</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="95" ref="-1" time="17/12/2008 12:16:49">ok, we will</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="96" ref="-1" time="17/12/2008 12:17:12">so are you with me ?</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="97" ref="96" time="17/12/2008 12:17:22">yes :). please continue</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="98" ref="-1" time="17/12/2008 12:17:31">ok</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="99" ref="-1" time="17/12/2008 12:17:37">yes, please begin</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="100" ref="-1" time="17/12/2008 12:17:41">The Support Vector Machine algorithm , abbreviated from now on SVM , it's a supervised learning method used for classification.</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="101" ref="-1" time="17/12/2008 12:17:43">yes, please</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="102" ref="-1" time="17/12/2008 12:17:57">what it classifies ?</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="103" ref="-1" time="17/12/2008 12:18:06">objects</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="104" ref="-1" time="17/12/2008 12:18:14">how it classifies ?</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="105" ref="-1" time="17/12/2008 12:18:44">using a separating hyperplan</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="106" ref="-1" time="17/12/2008 12:19:00">the input data is viewed as two sets of vectors</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="107" ref="-1" time="17/12/2008 12:19:04">in n-dimensional space</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="108" ref="107" time="17/12/2008 12:19:11">i think you need to explain what representation we're using for objects :)</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="109" ref="-1" time="17/12/2008 12:19:29">but it seems you finished before i had the chance to ask</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="110" ref="-1" time="17/12/2008 12:19:30">this is a generic representation</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="111" ref="-1" time="17/12/2008 12:19:44">you can classify all sort of objects</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="112" ref="-1" time="17/12/2008 12:20:01">from fruits to shoes :)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="113" ref="-1" time="17/12/2008 12:20:09">is there any restriction whatsoever?</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="114" ref="-1" time="17/12/2008 12:20:12">if you succed in representing them in an n-dimensional space</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="115" ref="-1" time="17/12/2008 12:20:20">for a practic example I believe an abstractization is needed, in order to set the dimensions</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="116" ref="113" time="17/12/2008 12:20:40">the only restriction is to find a representation for them in n-dimensional space , as i was saying</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="117" ref="-1" time="17/12/2008 12:20:49">yes, we can just set some attributes that are measurable and give them a dimension</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="118" ref="-1" time="17/12/2008 12:21:03">exactly , spider , you are right</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="119" ref="-1" time="17/12/2008 12:21:49">so , after you have the n-dimensional represantations as two sets fof vectors</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="120" ref="-1" time="17/12/2008 12:22:24">you will construct the separating hyperplan in that space, that minimize the margin between the two data sets</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="121" ref="-1" time="17/12/2008 12:22:48">what is a margin?</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="122" ref="-1" time="17/12/2008 12:23:32">intuitively , the margin is a curve</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="123" ref="-1" time="17/12/2008 12:23:49">So, you can classify online two sets of objects. How can you classify a goup of objects in 5 sets for example?</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="124" ref="-1" time="17/12/2008 12:24:07">iteratively :)</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="125" ref="123" time="17/12/2008 12:24:14">for example ,</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="126" ref="-1" time="17/12/2008 12:24:18">yeah, but in this case, the margin is more like this: imagine set A of points, set B of points, and the plane beeing a line |</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="127" ref="-1" time="17/12/2008 12:24:23">you start with the most generic ones</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="128" ref="-1" time="17/12/2008 12:24:25">A | B</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="129" ref="-1" time="17/12/2008 12:24:35">and split into 2 sets</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="130" ref="-1" time="17/12/2008 12:24:47">then every set you'll split again in 4 sets</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="131" ref="-1" time="17/12/2008 12:24:53">the distance from the closest point in A to the bar + the distance from the closest point in B to the bar is the margin.</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="132" ref="-1" time="17/12/2008 12:25:01">weren't the sets n-spaced?</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="133" ref="-1" time="17/12/2008 12:25:30">we're talking about representing a hiperplane in ... 2D :P so you can see it</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="134" ref="-1" time="17/12/2008 12:25:33">klimberu , now you understand</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="135" ref="-1" time="17/12/2008 12:25:43">how you can clasify 5 sets?</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="136" ref="-1" time="17/12/2008 12:25:47">oh, i understand</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="137" ref="-1" time="17/12/2008 12:26:29">we can't draw n-dimensional, but we can understand the concept by drawing 2D and having the plane as a line</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="138" ref="-1" time="17/12/2008 12:26:46">thank-you for support , spider</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="139" ref="-1" time="17/12/2008 12:27:00">yes, i understood that :)</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="140" ref="-1" time="17/12/2008 12:27:10">yes, just that maybe in order to get a complete classification of the objects (for 3 sets for example), you will have to combine two of the four sets resulted</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="141" ref="-1" time="17/12/2008 12:27:14">the &amp;quot;line&amp;quot; wasn't clear to me right away</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="142" ref="-1" time="17/12/2008 12:27:21">:)</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="143" ref="-1" time="17/12/2008 12:27:47">now , i will tell you what is this algorithm used for</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="144" ref="-1" time="17/12/2008 12:28:45">have any clues , about where you can use this algorithm at its maximum strength?</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="145" ref="144" time="17/12/2008 12:29:23">i'd say it's used to put an object into category A or B once you have the starting sets</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="146" ref="-1" time="17/12/2008 12:29:48">i was asking for a practical usage</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="147" ref="-1" time="17/12/2008 12:30:00">collision detection? :D</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="148" ref="-1" time="17/12/2008 12:30:02">in a case where the classification may be represented as a binary tree</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="149" ref="-1" time="17/12/2008 12:30:16">let me tell you , that it is used with success by Reuters</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="150" ref="-1" time="17/12/2008 12:30:21">i haven't really thought about that</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="151" ref="-1" time="17/12/2008 12:30:24">to clasify articles by subject</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="152" ref="149" time="17/12/2008 12:30:46">that's amazing, really.</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="153" ref="-1" time="17/12/2008 12:31:04">they have a large data base with articles</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="154" ref="-1" time="17/12/2008 12:31:10">what can you tell us about the speed of the algorithm?</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="155" ref="-1" time="17/12/2008 12:31:15">and they use this algorithm to easy find old articles</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="156" ref="-1" time="17/12/2008 12:31:26">but what about the underlying complicated mathematical model? i seem to recall it's very complicated to implement. can you tell us more, ireal?</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="157" ref="-1" time="17/12/2008 12:31:35">what if the article fits more than one category?</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="158" ref="-1" time="17/12/2008 12:32:00">depending on some parameters</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="159" ref="-1" time="17/12/2008 12:32:18">you can enforce an article to fit in a given category.</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="160" ref="-1" time="17/12/2008 12:32:27">for example you define some keywords</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="161" ref="-1" time="17/12/2008 12:32:48">for a given category</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="162" ref="-1" time="17/12/2008 12:32:49">and</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="163" ref="-1" time="17/12/2008 12:32:54">i see, so in the end you must split manually the multi-fitting items</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="164" ref="-1" time="17/12/2008 12:32:58">if the article fits into more categories you add</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="165" ref="-1" time="17/12/2008 12:33:00">we can always choose one of the n categories or less</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="166" ref="-1" time="17/12/2008 12:33:11">more keywords to a category</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="167" ref="-1" time="17/12/2008 12:33:27">you can do this</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="168" ref="-1" time="17/12/2008 12:33:34">depending what you want</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="169" ref="-1" time="17/12/2008 12:34:00">if you want to have a better splitting you should define more keywords that match a certain category</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="170" ref="-1" time="17/12/2008 12:34:11">so not n, n+k :)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="171" ref="-1" time="17/12/2008 12:34:14"/>
</Turn>
<Turn nickname="ireal">
<Utterance genid="172" ref="-1" time="17/12/2008 12:34:17">:)</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="173" ref="-1" time="17/12/2008 12:34:28">still. we haven't talked about the speed of the algorithm :)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="174" ref="-1" time="17/12/2008 12:34:36">which in the end is noted as N :)</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="175" ref="-1" time="17/12/2008 12:34:37">regarding speed</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="176" ref="-1" time="17/12/2008 12:34:44">it involves quadratic programming</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="177" ref="-1" time="17/12/2008 12:34:48">there where too many questions at one time :)</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="178" ref="-1" time="17/12/2008 12:34:56">since it has a very clear and simple idea</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="179" ref="-1" time="17/12/2008 12:35:17">it is very easy to have an optimized</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="180" ref="-1" time="17/12/2008 12:35:26">solution</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="181" ref="-1" time="17/12/2008 12:35:40">it have running time in O(logN)</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="182" ref="-1" time="17/12/2008 12:35:48">yes, but its complexity may add some speed limitation</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="183" ref="-1" time="17/12/2008 12:36:37">yes , spider</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="184" ref="-1" time="17/12/2008 12:36:45">you are &amp;quot;very&amp;quot; right</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="185" ref="-1" time="17/12/2008 12:36:53">it involves quadratic programming</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="186" ref="-1" time="17/12/2008 12:37:25">so the limitations are in fact the limitations brought by the quadratic programming</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="187" ref="-1" time="17/12/2008 12:37:39">exactly</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="188" ref="-1" time="17/12/2008 12:38:12">but , quadratic programming reached impressive results</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="189" ref="-1" time="17/12/2008 12:38:14">during last years</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="190" ref="-1" time="17/12/2008 12:38:24">obviosly the methods of solving that are very well documented, since it's a major field of maths, but it seems to imply that one can't implement such an algorithm in under 2h</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="191" ref="-1" time="17/12/2008 12:38:47">with some initial assumptions</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="192" ref="191" time="17/12/2008 12:38:59">we need to rely on existing math packages</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="193" ref="-1" time="17/12/2008 12:39:04">and within a predefined set of input data you can go below this limit</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="194" ref="-1" time="17/12/2008 12:39:19">I know that quadratic programming involves polinomial time</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="195" ref="-1" time="17/12/2008 12:39:26">i think i'll do some final conclusion</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="196" ref="-1" time="17/12/2008 12:39:41">ok. i think we got the ideas behind SVM. we should also remember we have yet to learn about ART Neural Networks</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="197" ref="-1" time="17/12/2008 12:39:51">of course</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="198" ref="-1" time="17/12/2008 12:40:06">what i want you to remember</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="199" ref="-1" time="17/12/2008 12:40:44">is that this algorithm can be theoretically analized using concepts</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="200" ref="-1" time="17/12/2008 12:40:57">from computational learning theory</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="201" ref="-1" time="17/12/2008 12:41:21">and in the same thime it can achieve good performance when applied to real problems</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="202" ref="201" time="17/12/2008 12:41:39">we will return on that later on with a comparison between them, i'm sure :). iceman?</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="203" ref="-1" time="17/12/2008 12:41:50">of , course</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="204" ref="-1" time="17/12/2008 12:41:54">:D</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="205" ref="-1" time="17/12/2008 12:43:39">ok, i guess it is my turn</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="206" ref="205" time="17/12/2008 12:43:52">the ball is in your field, iceman :)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="207" ref="-1" time="17/12/2008 12:44:05">what i am about to present to you is ART</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="208" ref="-1" time="17/12/2008 12:44:15">which of course stand for a name</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="209" ref="-1" time="17/12/2008 12:44:24">Adaptive Resonance Theory</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="210" ref="-1" time="17/12/2008 12:44:49">waw!</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="211" ref="-1" time="17/12/2008 12:45:23">in essence the ART is a neural network architecture</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="212" ref="-1" time="17/12/2008 12:45:25">but</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="213" ref="-1" time="17/12/2008 12:45:52">the basic ART system is in fact an unsupervised learning model</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="214" ref="-1" time="17/12/2008 12:46:03">i assume the way the neurons are interconnected makes it special</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="215" ref="-1" time="17/12/2008 12:46:34">not so much as the underlying actions taken</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="216" ref="-1" time="17/12/2008 12:46:50">i will present the basic structure of a classic ART</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="217" ref="-1" time="17/12/2008 12:47:13">if you have any problems understanding any of the terms please interrupt me</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="218" ref="-1" time="17/12/2008 12:47:19">and i will explain</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="219" ref="217" time="17/12/2008 12:47:31">ok</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="220" ref="-1" time="17/12/2008 12:47:37">ok</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="221" ref="-1" time="17/12/2008 12:48:32">the structure of an ART is composed of 4 pieces</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="222" ref="-1" time="17/12/2008 12:48:42">the comparison field</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="223" ref="-1" time="17/12/2008 12:48:47">the recognition field</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="224" ref="-1" time="17/12/2008 12:48:56">reset module</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="225" ref="-1" time="17/12/2008 12:49:05">and the vigilante parameter</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="226" ref="-1" time="17/12/2008 12:49:27">the usual training is simple</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="227" ref="-1" time="17/12/2008 12:49:44">the user provides the training set and the vigilante parameter</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="228" ref="-1" time="17/12/2008 12:49:45">Can you describe them a little?</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="229" ref="228" time="17/12/2008 12:49:58">or just their functions</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="230" ref="-1" time="17/12/2008 12:50:13">of course, i was about to do so</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="231" ref="-1" time="17/12/2008 12:50:48">the comparison filed is a string of neurons which receive the input data</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="232" ref="-1" time="17/12/2008 12:51:39">each of them receives his part of the array and computes the probability of matching the item that gave all that data</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="233" ref="-1" time="17/12/2008 12:52:35">after this computation is done they send their results to all the neurons in the comparison field</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="234" ref="-1" time="17/12/2008 12:53:04">every neuron in the recognition filed is connected to every neuron in the comparison field</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="235" ref="-1" time="17/12/2008 12:53:27">therefore the recognition field is as expected another string of neurons :)</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="236" ref="-1" time="17/12/2008 12:53:40">how many neurons are on each level?</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="237" ref="236" time="17/12/2008 12:53:58">basically, it seems to be formed out of classic 2 neuron strings.</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="238" ref="237" time="17/12/2008 12:54:21">1 neuron get the input, sends signal to next neuron, which sends output</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="239" ref="-1" time="17/12/2008 12:54:32">there is no standard number for the neurons, it depends on the complexity of the problem you want to solve with it</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="240" ref="-1" time="17/12/2008 12:54:46">ok</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="241" ref="-1" time="17/12/2008 12:55:21">the neurons in the comparison select their best match and send it to that neuron</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="242" ref="-1" time="17/12/2008 12:55:34">yeah, you can add more neurons in the first field, or the 2nd field, or both, and increase the number of links that way</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="243" ref="-1" time="17/12/2008 12:56:04">yes</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="244" ref="-1" time="17/12/2008 12:56:24">so, after comparison follows recognition</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="245" ref="-1" time="17/12/2008 12:57:22">the recognition neurons that were activated by receiving the information , use the Weight to compute the information for the next step</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="246" ref="-1" time="17/12/2008 12:57:59">the weight is predefined or it may be adjusted by the neurons themselves?</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="247" ref="-1" time="17/12/2008 12:58:53">it is changed in the training period and locked when using the network for recognition</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="248" ref="-1" time="17/12/2008 12:58:54">(just background information: if a neuron gets 2 inputs from R x and y, it can compute the result r = x * weightx + y * weight y or some similar formula)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="249" ref="-1" time="17/12/2008 12:59:41">yes, it calculates the chance that the item inputed is in the category that that neuron represents</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="250" ref="-1" time="17/12/2008 01:00:02">since is an unsupervised learning , the weight mustbe constant</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="251" ref="-1" time="17/12/2008 01:00:04">well, every recognition neuron does that</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="252" ref="-1" time="17/12/2008 01:00:25">of course, after the training :)</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="253" ref="250" time="17/12/2008 01:00:42">not really. it always changes, but after the training set, it will change with less amounts</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="254" ref="-1" time="17/12/2008 01:00:53">after the computation, there takes place the lateral inhibition</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="255" ref="225" time="17/12/2008 01:01:37">ok. what about the vigilance parameter?</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="256" ref="-1" time="17/12/2008 01:02:24">it is some sort of threshold</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="257" ref="-1" time="17/12/2008 01:02:26">?</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="258" ref="-1" time="17/12/2008 01:02:39">well, each neuron diminishes the other's results, and after that step the remaining values are compared to the vigilante parameter</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="259" ref="-1" time="17/12/2008 01:02:50">that is exactly correct</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="260" ref="-1" time="17/12/2008 01:03:35">how does it influence the categorisation process? because in the end, that's what the whole network must do.</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="261" ref="-1" time="17/12/2008 01:03:40">in the end, the neurons compute the chance that the received information about the item puts the item in one of the categories already represented by one of the recognition neurons</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="262" ref="-1" time="17/12/2008 01:03:42">ok , so now i know what it does</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="263" ref="-1" time="17/12/2008 01:04:19">well, if the value returned by the recognition neurons isn't greater or equal than the vigilante parameter</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="264" ref="-1" time="17/12/2008 01:04:31">then the match was not successful</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="265" ref="264" time="17/12/2008 01:04:57">i was thinking more on the lines of beeing able to have finer grained categories or not</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="266" ref="-1" time="17/12/2008 01:05:15">and the process is restarted, while one of the uncommited recognition neurons is commited to recognise that type of item</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="267" ref="-1" time="17/12/2008 01:05:40">well, if the threshold is higher then the matching is higher in grain</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="268" ref="-1" time="17/12/2008 01:05:57">that is inherent to the process as all the neurons try to match the item</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="269" ref="-1" time="17/12/2008 01:06:18">oooh, so that must mean that having a small vigilance, we get less categories but more general ones, while having a big value will yield more finer categories</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="270" ref="-1" time="17/12/2008 01:06:31">exactly</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="271" ref="-1" time="17/12/2008 01:06:58">how about the training method? the sets are very important for neural networks.</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="272" ref="-1" time="17/12/2008 01:07:02">each neuron gets a higher score when its values approximate the items data better</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="273" ref="-1" time="17/12/2008 01:07:22">well, that was the basic training</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="274" ref="269" time="17/12/2008 01:07:38">very nice explanations , can you tell us more about its practical applications</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="275" ref="-1" time="17/12/2008 01:07:47">when matching, the Weight does not change and the recognition neurons don not get commited</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="276" ref="-1" time="17/12/2008 01:07:54">yes, please :)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="277" ref="-1" time="17/12/2008 01:07:55">sure</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="278" ref="-1" time="17/12/2008 01:08:02">yes, I am curios about the part</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="279" ref="-1" time="17/12/2008 01:08:14">as you can guess it has alot of applications</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="280" ref="-1" time="17/12/2008 01:08:25">but one i remember the best</Utterance>
</Turn>
<Turn nickname="_ireal">
<Utterance genid="281" ref="-1" time="17/12/2008 01:13:32">joins the room</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="282" ref="-1" time="17/12/2008 01:13:39">joins the room</Utterance>
</Turn>
<Turn nickname="_ireal">
<Utterance genid="283" ref="-1" time="17/12/2008 01:13:41">leaves the room</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="284" ref="-1" time="17/12/2008 01:13:56">joins the room</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="285" ref="-1" time="17/12/2008 01:14:11">leaves the room</Utterance>
</Turn>
<Turn nickname="Spider">
<Utterance genid="286" ref="-1" time="17/12/2008 01:14:36">joins the room</Utterance>
</Turn>
<Turn nickname="Spider">
<Utterance genid="287" ref="-1" time="17/12/2008 01:14:43">leaves the room</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="288" ref="-1" time="17/12/2008 01:14:58">joins the room</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="289" ref="-1" time="17/12/2008 01:15:25">joins the room</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="290" ref="-1" time="17/12/2008 01:17:03">joins the room</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="291" ref="-1" time="17/12/2008 01:19:11">leaves the room</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="292" ref="-1" time="17/12/2008 01:20:07">joins the room</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="293" ref="-1" time="17/12/2008 01:21:10">joins the room</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="294" ref="-1" time="17/12/2008 01:21:26">leaves the room</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="295" ref="-1" time="17/12/2008 01:21:59">we had a little interruption. everything ok?</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="296" ref="-1" time="17/12/2008 01:22:11">so, after a coffee creak we can get back to our disscusion :)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="297" ref="-1" time="17/12/2008 01:22:12">yes, i guess we got over it :)</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="298" ref="-1" time="17/12/2008 01:22:22">yes , we can go on</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="299" ref="-1" time="17/12/2008 01:22:30">break</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="300" ref="-1" time="17/12/2008 01:22:44">ok, i was telling you that i remember one application that i personally liked</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="301" ref="280" time="17/12/2008 01:22:46">we were talking about a few applications of Neural Networks.</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="302" ref="-1" time="17/12/2008 01:22:58">tha ART was used in the detection of bottlenecks</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="303" ref="300" time="17/12/2008 01:22:59">yeah</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="304" ref="-1" time="17/12/2008 01:23:18">bottlenecks in heterogenous network environments</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="305" ref="-1" time="17/12/2008 01:23:30">and it does a very good job</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="306" ref="-1" time="17/12/2008 01:23:34">bottlenecks ?</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="307" ref="-1" time="17/12/2008 01:23:40">yes</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="308" ref="304" time="17/12/2008 01:23:48">yes, i did hear it performs very well in real life and real time data environments</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="309" ref="-1" time="17/12/2008 01:24:08">even in a high speed network you can have bottlenecks :)</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="310" ref="-1" time="17/12/2008 01:24:20">well, having heard all presentation, i think we should take a bit of time to compare them :)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="311" ref="-1" time="17/12/2008 01:24:34">ok, i will stop here then</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="312" ref="-1" time="17/12/2008 01:24:41">thank you all for your time :)</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="313" ref="312" time="17/12/2008 01:24:50">you're welcome</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="314" ref="-1" time="17/12/2008 01:25:14">but it's not finished, now we will try to compare them</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="315" ref="-1" time="17/12/2008 01:25:23">the algorithms</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="316" ref="-1" time="17/12/2008 01:25:28">my presentation is :)</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="317" ref="-1" time="17/12/2008 01:25:30">i think a good criteria is whether the algorithm is trainable and supervised or unsupervised</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="318" ref="-1" time="17/12/2008 01:25:31">ok, so lets have a short recap of the algorithms</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="319" ref="-1" time="17/12/2008 01:26:00">obviously, K-Means doesn't need training, which is a plus</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="320" ref="-1" time="17/12/2008 01:26:23">SVM it is unsupervised and it can be trained or not</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="321" ref="-1" time="17/12/2008 01:26:42">Naive Bayes is trainable</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="322" ref="-1" time="17/12/2008 01:26:56">based on the probabilities the attributes appear</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="323" ref="-1" time="17/12/2008 01:26:58">ART can be trained attended or unattended</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="324" ref="-1" time="17/12/2008 01:27:18">another criteria i had in mind is the computations involved</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="325" ref="-1" time="17/12/2008 01:27:31">and the user gets to set the standard he wants by selecting the vigilance variable</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="326" ref="-1" time="17/12/2008 01:27:44">i think Bayes is the least computational one, right?</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="327" ref="-1" time="17/12/2008 01:27:52">from this point of view, the Naive Bayes is in top</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="328" ref="-1" time="17/12/2008 01:28:02">i believe its the ART</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="329" ref="-1" time="17/12/2008 01:28:05">yes, it only uses some tables</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="330" ref="-1" time="17/12/2008 01:28:18">No numerical optimization, matrix algebra needed</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="331" ref="328" time="17/12/2008 01:28:20">Bayes has a linear formula that computes a sum :P</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="332" ref="-1" time="17/12/2008 01:28:26">if im not mistaken it has a finite number of steps</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="333" ref="-1" time="17/12/2008 01:28:28"/>
</Turn>
<Turn nickname="ireal">
<Utterance genid="334" ref="-1" time="17/12/2008 01:28:41">from my point of view SVM it envolves a lot of computations</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="335" ref="332" time="17/12/2008 01:28:50">the next in line would be K-Means, because it has a finite number of steps, and just simple distance computations</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="336" ref="-1" time="17/12/2008 01:29:00">having a finite number of steps doesn't involve it is simple</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="337" ref="334" time="17/12/2008 01:29:12">then comes ART, and last is SVM</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="338" ref="-1" time="17/12/2008 01:29:36">didn't imply it was simple</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="339" ref="-1" time="17/12/2008 01:29:48">just that it is linear</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="340" ref="336" time="17/12/2008 01:29:52">yes, but at each step we just iterate through points, and get the center of a sphere.</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="341" ref="-1" time="17/12/2008 01:30:13">all the computations are sums and differences directly linked to the number of neurons</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="342" ref="-1" time="17/12/2008 01:30:37">hmmm, that might be a good point. i might have been wrong</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="343" ref="-1" time="17/12/2008 01:30:43">i agree with iceman</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="344" ref="343" time="17/12/2008 01:30:53">it seems ART is simpler</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="345" ref="-1" time="17/12/2008 01:31:08">spider , computing the center of a sphere might require some divisions , which are very costly operations</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="346" ref="-1" time="17/12/2008 01:31:09">about, the K-means, doesn't it have to make all the computations for every addition?</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="347" ref="-1" time="17/12/2008 01:31:17">simpler than Bayes? :D</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="348" ref="346" time="17/12/2008 01:31:19">ok, so we got Bayes, ART, K-Means, SVM. agree?</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="349" ref="-1" time="17/12/2008 01:31:39">yes</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="350" ref="-1" time="17/12/2008 01:31:47">yes,</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="351" ref="346" time="17/12/2008 01:32:01">no, but it does have to redo them every iteration, and it involves square power</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="352" ref="-1" time="17/12/2008 01:32:22">so that's why I believe neural network is simpler</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="353" ref="-1" time="17/12/2008 01:32:25">i see</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="354" ref="-1" time="17/12/2008 01:33:05">though the training part is perhaps longer, i think its faster in usage</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="355" ref="352" time="17/12/2008 01:33:10">also, i think the ART has a O(1) time? fixed number of neurons.</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="356" ref="-1" time="17/12/2008 01:33:36">O(1) , i don't really think so</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="357" ref="-1" time="17/12/2008 01:34:03">i think O(finite number) thats what he meant</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="358" ref="-1" time="17/12/2008 01:34:19">so the input data doesnt affect the computation time</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="359" ref="-1" time="17/12/2008 01:34:22">there are cases when the whole process through the neurons is restarted</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="360" ref="-1" time="17/12/2008 01:34:23">when used</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="361" ref="-1" time="17/12/2008 01:34:27">it can have a lot of iterations , and the training also involves consuming time</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="362" ref="-1" time="17/12/2008 01:34:34">only when training</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="363" ref="362" time="17/12/2008 01:34:48">yeah, but what if it's CONSTANTLY training?</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="364" ref="363" time="17/12/2008 01:34:55">:)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="365" ref="-1" time="17/12/2008 01:34:56">as i stated before, it is true that the training takes alot of time</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="366" ref="-1" time="17/12/2008 01:35:00">its not</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="367" ref="-1" time="17/12/2008 01:35:03">:))</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="368" ref="-1" time="17/12/2008 01:35:14">you train it once and then use it</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="369" ref="-1" time="17/12/2008 01:35:44">can you use a library of trained neurons :D?</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="370" ref="-1" time="17/12/2008 01:35:47">ok. we would have to know the specifics of implementation and using it, but for now let's say it's simpler than K-Means :) for purpose of working with +/-</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="371" ref="-1" time="17/12/2008 01:35:54">i guess</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="372" ref="-1" time="17/12/2008 01:35:56">yes, but for different types of objects it may be needed to be differently trained</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="373" ref="-1" time="17/12/2008 01:36:06">although we can make a case out of it</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="374" ref="-1" time="17/12/2008 01:36:18">next criteria... how about the complexity of implementation?</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="375" ref="-1" time="17/12/2008 01:36:19">well, i agree then, i don't have the specifics of the implementation</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="376" ref="-1" time="17/12/2008 01:36:44">K-means is the simplest :D</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="377" ref="-1" time="17/12/2008 01:36:53">Bayes is easiest. I know K-Means is next.</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="378" ref="-1" time="17/12/2008 01:36:57">regarding the complexity Bayes is again in top</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="379" ref="-1" time="17/12/2008 01:37:00">:)</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="380" ref="-1" time="17/12/2008 01:37:13">for Bayes, you only have to use lookup tables for number crunching</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="381" ref="380" time="17/12/2008 01:37:17">but.</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="382" ref="381" time="17/12/2008 01:37:24">and it's a big but :)</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="383" ref="-1" time="17/12/2008 01:37:39">it has a linear complexity, so it is easier to apply</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="384" ref="-1" time="17/12/2008 01:37:46">i agree that Bayes it is very fast but it is not very performant in terms of results</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="385" ref="-1" time="17/12/2008 01:37:55">ART is kind of complex, but not very</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="386" ref="383" time="17/12/2008 01:38:03">if you use a 0 filled table, you'll multiply some probabilities with 0 and erase their influence. which leads to next thing -&amp;gt; very big tables</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="387" ref="-1" time="17/12/2008 01:38:19">SVM deliver state of the art performance</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="388" ref="386" time="17/12/2008 01:38:20">especially if an attribute can have lots of values</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="389" ref="-1" time="17/12/2008 01:38:22">i agree, alot of spce used</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="390" ref="-1" time="17/12/2008 01:38:40">Despite its simplicity, Naive Bayes can often outperform more sophisticated classification methods</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="391" ref="-1" time="17/12/2008 01:38:59">yes but this on special cases</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="392" ref="-1" time="17/12/2008 01:39:03">yes, but the result isn't guaranteed, is it?</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="393" ref="390" time="17/12/2008 01:39:10">yeah. in the end, it's easiest to implement. next is K-Means, for the simplicity of algorithm</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="394" ref="-1" time="17/12/2008 01:39:13">Even few train sets lead to a good result</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="395" ref="393" time="17/12/2008 01:39:39">and the next two i don't need to specify the order for them :)</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="396" ref="-1" time="17/12/2008 01:39:51">i think for an algorithm it's important to be performant and less easy to implement</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="397" ref="-1" time="17/12/2008 01:39:58">for small training sets there is no guarantee, but the chances are high L)</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="398" ref="-1" time="17/12/2008 01:40:16">but now that gave me a new idea! a criteria of how good the classification really is and if there are certain data sets for which it doesn't work well</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="399" ref="-1" time="17/12/2008 01:40:22">depends on the user</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="400" ref="-1" time="17/12/2008 01:40:44">K-Means has no guarantees, so it's going to be last</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="401" ref="-1" time="17/12/2008 01:40:50">in this case SVM it's the best</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="402" ref="-1" time="17/12/2008 01:41:02">ART comes after SVM i think</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="403" ref="-1" time="17/12/2008 01:41:12">I agree</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="404" ref="-1" time="17/12/2008 01:41:46">for Bayes I believe there may be only particular cases when the results may not be good</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="405" ref="-1" time="17/12/2008 01:42:00">so for the efficiency the order is : SVM, ART, Bayes, K-means</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="406" ref="405" time="17/12/2008 01:42:09">yeah</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="407" ref="-1" time="17/12/2008 01:42:16">any other criterias?</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="408" ref="-1" time="17/12/2008 01:42:32">how about number of adjustable parameters?</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="409" ref="-1" time="17/12/2008 01:42:47">a case when the probability factor may be overcome</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="410" ref="-1" time="17/12/2008 01:42:59">i think ART is on the top</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="411" ref="-1" time="17/12/2008 01:43:00">oh, another plus for the ART is that in different implementations it can use Fuzzy logic :)</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="412" ref="-1" time="17/12/2008 01:43:09">K-means only got 2, I would say: size of k and initial sets</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="413" ref="-1" time="17/12/2008 01:43:16">but this doesnt mean that is the most flexible algorithm</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="414" ref="-1" time="17/12/2008 01:43:21">yes, you can easily add a new cathegory</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="415" ref="411" time="17/12/2008 01:43:26">yes, ART has LOTS of implementations</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="416" ref="415" time="17/12/2008 01:43:45">i'm serious :). there are about 10 variants of ART</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="417" ref="-1" time="17/12/2008 01:43:51">for Bayes you can adjust the number of attributes you may take into account</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="418" ref="-1" time="17/12/2008 01:43:56">yes, i know</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="419" ref="-1" time="17/12/2008 01:44:15">not sure about SVM. ireal?</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="420" ref="-1" time="17/12/2008 01:44:26">i think its difficult to change the implementation if you want more characteristics</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="421" ref="-1" time="17/12/2008 01:44:30">SVM doesnt have any adjustable parameters :)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="422" ref="-1" time="17/12/2008 01:44:45">:)</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="423" ref="-1" time="17/12/2008 01:44:47">ok. so the order is ART, Bayes, K-Means, SVM</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="424" ref="-1" time="17/12/2008 01:44:59">i agree</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="425" ref="-1" time="17/12/2008 01:45:06">me too</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="426" ref="-1" time="17/12/2008 01:45:47">to take advantage of these algorithms i think we should an application that would integrate them</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="427" ref="-1" time="17/12/2008 01:45:58">i think there's one more criteria, but not really sure: the number of classes in clustering, for the given method. K-Means has k. SVM has 2, basically</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="428" ref="-1" time="17/12/2008 01:46:02">*create ;)</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="429" ref="-1" time="17/12/2008 01:46:21">yes</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="430" ref="-1" time="17/12/2008 01:46:38">ART has as N ,the number of neuron on the recognition field</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="431" ref="-1" time="17/12/2008 01:46:39">ART has a configurable number, but stable: you need to link the neurons when you change it</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="432" ref="-1" time="17/12/2008 01:46:43"/>
</Turn>
<Turn nickname="iceman">
<Utterance genid="433" ref="-1" time="17/12/2008 01:46:45">yes</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="434" ref="-1" time="17/12/2008 01:46:52">for Bayes too, the number of classes is configurable</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="435" ref="-1" time="17/12/2008 01:46:57">and can be increased easily :)</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="436" ref="-1" time="17/12/2008 01:47:21">another criteria could be the memory requirements</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="437" ref="-1" time="17/12/2008 01:47:22">ok, so besides K-means all the others can use multiple and high number of classes</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="438" ref="427" time="17/12/2008 01:47:28">well, this is not such an important criteria, since any method can be generalised or has been.</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="439" ref="-1" time="17/12/2008 01:47:36">so what do you say about an application that integrates all of this algorithms ?</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="440" ref="-1" time="17/12/2008 01:47:52">sounds great!</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="441" ref="437" time="17/12/2008 01:48:05">you seem to forget that you can't choose a larger number of classes than how many inputs you get :P so K can vary between 1 and all</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="442" ref="-1" time="17/12/2008 01:48:14">for SVM I believe there is are extensive memory requirements</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="443" ref="-1" time="17/12/2008 01:48:31">:)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="444" ref="-1" time="17/12/2008 01:48:46">true :)</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="445" ref="-1" time="17/12/2008 01:48:54">you would be surprised but not</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="446" ref="-1" time="17/12/2008 01:49:10">memory requirements should be the smallest for K-Means :). only the input set is needed and k points for the centroids</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="447" ref="-1" time="17/12/2008 01:49:20">it is computational extensiv but it doesnt use a great amount of memory</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="448" ref="-1" time="17/12/2008 01:49:29">probably the application should apply one of thse 4 algorithms depending on that certain case</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="449" ref="439" time="17/12/2008 01:49:32">ok. we should think of integrating them. i agree</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="450" ref="-1" time="17/12/2008 01:49:39">exactly</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="451" ref="-1" time="17/12/2008 01:49:46">we should create a generic algorithm</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="452" ref="-1" time="17/12/2008 01:50:14">that does some analysis on input data</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="453" ref="-1" time="17/12/2008 01:50:21">and decides what algorithm to apply</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="454" ref="-1" time="17/12/2008 01:50:26">how about an application for classifying stars?</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="455" ref="-1" time="17/12/2008 01:50:55">great :)</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="456" ref="-1" time="17/12/2008 01:50:55">or grouping areas in weather prediction maps?</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="457" ref="-1" time="17/12/2008 01:51:13">you have good ideas at this hour :)</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="458" ref="-1" time="17/12/2008 01:51:18">i think the second one is more useful</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="459" ref="457" time="17/12/2008 01:51:24">:) thank you</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="460" ref="-1" time="17/12/2008 01:51:36">the first one is intereseting too</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="461" ref="456" time="17/12/2008 01:51:42">yes, and also allows for better integration</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="462" ref="-1" time="17/12/2008 01:52:00">i agree</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="463" ref="-1" time="17/12/2008 01:52:11">we could use a faster algorithm when we want the prediction for next day, and a more complex one when we want a monthly prediction</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="464" ref="-1" time="17/12/2008 01:52:26">exactly</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="465" ref="-1" time="17/12/2008 01:52:33">or use the results from the daily predictions?</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="466" ref="-1" time="17/12/2008 01:52:45">i think we could do the opposite</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="467" ref="-1" time="17/12/2008 01:52:50">maybe we could make an algorithm to help another develop faster</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="468" ref="-1" time="17/12/2008 01:52:56">the complex algorithm can run in the background for 1 week, but we wouldn't care about the memory consumption or the time spent because we're predicting what will happen after 1 month, not straight away</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="469" ref="-1" time="17/12/2008 01:53:10">if we get the predictions right for short period of time</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="470" ref="-1" time="17/12/2008 01:53:15">especially the faster ones to help the slower ones to provide more accurate results</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="471" ref="470" time="17/12/2008 01:53:22">true</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="472" ref="-1" time="17/12/2008 01:53:28">we have a greater chance to get it right for a longer one</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="473" ref="-1" time="17/12/2008 01:53:36">we also cand integrate the results from one algorithm as trained input</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="474" ref="-1" time="17/12/2008 01:53:38">for another</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="475" ref="-1" time="17/12/2008 01:53:40">so i can definetely see SVM working as the most complex one</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="476" ref="-1" time="17/12/2008 01:53:46">Bayes as the fastest</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="477" ref="-1" time="17/12/2008 01:53:57">yes , SVM should be the last in this chain :)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="478" ref="-1" time="17/12/2008 01:54:09">we could break down to hourly steps of prediction</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="479" ref="476" time="17/12/2008 01:54:12">using K-Map to verify Bayes :)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="480" ref="-1" time="17/12/2008 01:54:20">hehe</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="481" ref="480" time="17/12/2008 01:54:30">and ART for speeding up SVM initial vector sets</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="482" ref="-1" time="17/12/2008 01:54:35">nice one :)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="483" ref="-1" time="17/12/2008 01:54:43">thats a great idea, we should verify the results</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="484" ref="-1" time="17/12/2008 01:55:13">i think should start working on this idea</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="485" ref="-1" time="17/12/2008 01:55:29">taking into consideration we're working with predictions (which usually fail) having more variants to choose from allows for better approximation of the real weather</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="486" ref="-1" time="17/12/2008 01:55:32">we also need a name for the application</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="487" ref="-1" time="17/12/2008 01:55:35">but more documention would be needed</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="488" ref="-1" time="17/12/2008 01:55:54">so in the end we will use a collaboration of the applications</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="489" ref="-1" time="17/12/2008 01:56:03">anyway, the weather cannot always be 100 % predicted</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="490" ref="-1" time="17/12/2008 01:56:05">not create a brand new one :P</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="491" ref="486" time="17/12/2008 01:56:11">i leave the name up to you :). i'm not very good with picking them</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="492" ref="-1" time="17/12/2008 01:56:14">yes</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="493" ref="-1" time="17/12/2008 01:56:39">ok so the pilot name will be IIKS :)</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="494" ref="-1" time="17/12/2008 01:56:45">i believe part of that is because they don't have time to run complex simulations</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="495" ref="-1" time="17/12/2008 01:56:49">after that if you have better ideas</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="496" ref="-1" time="17/12/2008 01:56:53">we will change it</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="497" ref="-1" time="17/12/2008 01:57:03">standing for?</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="498" ref="-1" time="17/12/2008 01:57:04">anyway, i think we should use : Bayes for hours/days, backed-up by K-means, and SVM and ART for weeks/moths</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="499" ref="-1" time="17/12/2008 01:57:11">that sounds good and misterious :)</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="500" ref="-1" time="17/12/2008 01:57:22">right now it does :P</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="501" ref="-1" time="17/12/2008 01:57:34">i think i saw that acronym somewhere</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="502" ref="-1" time="17/12/2008 01:57:43">:))</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="503" ref="-1" time="17/12/2008 01:57:55">yes , you see it in this room</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="504" ref="-1" time="17/12/2008 01:58:00">well then, this seems to have been a very successful meeting. :) any more points on the agenda before leaving ?</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="505" ref="-1" time="17/12/2008 01:58:02">Ireal Iceman ..:)</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="506" ref="-1" time="17/12/2008 01:58:19">nothing from me</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="507" ref="-1" time="17/12/2008 01:58:19">Issue-In-Kind System, but it wasn't this</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="508" ref="-1" time="17/12/2008 01:58:35">i think we have hit all the hot spots</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="509" ref="-1" time="17/12/2008 01:58:36">good idea</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="510" ref="-1" time="17/12/2008 01:58:49">sounds OK!</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="511" ref="-1" time="17/12/2008 01:58:52">I believe too that we have targeted our points</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="512" ref="-1" time="17/12/2008 01:58:55">we need a paper for these results</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="513" ref="512" time="17/12/2008 01:59:17">and I will send you an email with the points we talked about tonight.</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="514" ref="-1" time="17/12/2008 01:59:33">ok</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="515" ref="-1" time="17/12/2008 01:59:50">ok , spider , thank-you</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="516" ref="-1" time="17/12/2008 02:00:06">thank you all</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="517" ref="-1" time="17/12/2008 02:00:13">that would be nice, and hope that the next step of the project will have a good paper to start with</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="518" ref="-1" time="17/12/2008 02:00:20">thank you all and good night :)</Utterance>
</Turn>
<Turn nickname="klimberu">
<Utterance genid="519" ref="-1" time="17/12/2008 02:00:33">good night to you too :)</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="520" ref="-1" time="17/12/2008 02:00:34">good night</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="521" ref="-1" time="17/12/2008 02:00:35">good night :)</Utterance>
</Turn>
<Turn nickname="spider">
<Utterance genid="522" ref="-1" time="17/12/2008 02:00:50">leaves the room</Utterance>
</Turn>
<Turn nickname="iceman">
<Utterance genid="523" ref="-1" time="17/12/2008 02:00:51">leaves the room</Utterance>
</Turn>
<Turn nickname="ireal">
<Utterance genid="524" ref="-1" time="17/12/2008 02:00:56">leaves the room</Utterance>
</Turn>
</Body>
<Annotation annotation_date="16/01/2009 18:19:36" annotator="Sandu Gabriel, 5, SPBA">
<Topics>
<Item>probability</Item>
<Item>cluster</Item>
<Item>data mining</Item>
<Item>n-dimension space</Item>
<Item>hyperplane</Item>
<Item>quadratic programming</Item>
<Item>neural networks</Item>
<Item>training</Item>
<Item>speed</Item>
<Item>weather prediction</Item>
</Topics>
<Grades>
<General_grade collaboration="10"/>
<General_grade ontopic="10"/>
<General_grade nickname="klimberu" value="10"/>
<General_grade nickname="Iceman" value="0"/>
<General_grade nickname="iceman" value="8"/>
<General_grade nickname="ireal" value="9"/>
<General_grade nickname="spider" value="10"/>
<General_grade nickname="_ireal" value="0"/>
<General_grade nickname="Spider" value="0"/>
<Instant_grade genid_ref="1-&gt;20" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="1-&gt;20" nickname="iceman" value="10"/>
<Instant_grade genid_ref="1-&gt;20" nickname="ireal" value="10"/>
<Instant_grade genid_ref="1-&gt;20" nickname="spider" value="10"/>
<Instant_grade genid_ref="21-&gt;40" nickname="klimberu" value="8"/>
<Instant_grade genid_ref="21-&gt;40" nickname="ireal" value="9"/>
<Instant_grade genid_ref="21-&gt;40" nickname="spider" value="8"/>
<Instant_grade genid_ref="41-&gt;60" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="41-&gt;60" nickname="ireal" value="10"/>
<Instant_grade genid_ref="41-&gt;60" nickname="spider" value="10"/>
<Instant_grade genid_ref="61-&gt;80" nickname="klimberu" value="9"/>
<Instant_grade genid_ref="61-&gt;80" nickname="ireal" value="10"/>
<Instant_grade genid_ref="61-&gt;80" nickname="spider" value="10"/>
<Instant_grade genid_ref="81-&gt;100" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="81-&gt;100" nickname="ireal" value="9"/>
<Instant_grade genid_ref="81-&gt;100" nickname="spider" value="10"/>
<Instant_grade genid_ref="101-&gt;120" nickname="klimberu" value="8"/>
<Instant_grade genid_ref="101-&gt;120" nickname="iceman" value="8"/>
<Instant_grade genid_ref="101-&gt;120" nickname="ireal" value="9"/>
<Instant_grade genid_ref="101-&gt;120" nickname="spider" value="9"/>
<Instant_grade genid_ref="121-&gt;140" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="121-&gt;140" nickname="iceman" value="6"/>
<Instant_grade genid_ref="121-&gt;140" nickname="ireal" value="8"/>
<Instant_grade genid_ref="121-&gt;140" nickname="spider" value="10"/>
<Instant_grade genid_ref="141-&gt;160" nickname="klimberu" value="9"/>
<Instant_grade genid_ref="141-&gt;160" nickname="ireal" value="10"/>
<Instant_grade genid_ref="141-&gt;160" nickname="spider" value="9"/>
<Instant_grade genid_ref="161-&gt;180" nickname="iceman" value="8"/>
<Instant_grade genid_ref="161-&gt;180" nickname="ireal" value="10"/>
<Instant_grade genid_ref="161-&gt;180" nickname="spider" value="10"/>
<Instant_grade genid_ref="181-&gt;200" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="181-&gt;200" nickname="iceman" value="9"/>
<Instant_grade genid_ref="181-&gt;200" nickname="ireal" value="10"/>
<Instant_grade genid_ref="181-&gt;200" nickname="spider" value="10"/>
<Instant_grade genid_ref="201-&gt;220" nickname="iceman" value="10"/>
<Instant_grade genid_ref="201-&gt;220" nickname="ireal" value="9"/>
<Instant_grade genid_ref="201-&gt;220" nickname="spider" value="9"/>
<Instant_grade genid_ref="221-&gt;240" nickname="klimberu" value="9"/>
<Instant_grade genid_ref="221-&gt;240" nickname="iceman" value="10"/>
<Instant_grade genid_ref="221-&gt;240" nickname="ireal" value="9"/>
<Instant_grade genid_ref="221-&gt;240" nickname="spider" value="9"/>
<Instant_grade genid_ref="241-&gt;260" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="241-&gt;260" nickname="iceman" value="8"/>
<Instant_grade genid_ref="241-&gt;260" nickname="ireal" value="10"/>
<Instant_grade genid_ref="241-&gt;260" nickname="spider" value="10"/>
<Instant_grade genid_ref="261-&gt;280" nickname="iceman" value="10"/>
<Instant_grade genid_ref="261-&gt;280" nickname="ireal" value="7"/>
<Instant_grade genid_ref="261-&gt;280" nickname="spider" value="10"/>
<Instant_grade genid_ref="281-&gt;300" nickname="klimberu" value="0"/>
<Instant_grade genid_ref="281-&gt;300" nickname="iceman" value="0"/>
<Instant_grade genid_ref="281-&gt;300" nickname="ireal" value="0"/>
<Instant_grade genid_ref="281-&gt;300" nickname="spider" value="0"/>
<Instant_grade genid_ref="301-&gt;320" nickname="klimberu" value="9"/>
<Instant_grade genid_ref="301-&gt;320" nickname="iceman" value="10"/>
<Instant_grade genid_ref="301-&gt;320" nickname="ireal" value="10"/>
<Instant_grade genid_ref="301-&gt;320" nickname="spider" value="10"/>
<Instant_grade genid_ref="321-&gt;340" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="321-&gt;340" nickname="iceman" value="9"/>
<Instant_grade genid_ref="321-&gt;340" nickname="ireal" value="10"/>
<Instant_grade genid_ref="321-&gt;340" nickname="spider" value="10"/>
<Instant_grade genid_ref="341-&gt;360" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="341-&gt;360" nickname="iceman" value="10"/>
<Instant_grade genid_ref="341-&gt;360" nickname="ireal" value="10"/>
<Instant_grade genid_ref="341-&gt;360" nickname="spider" value="9"/>
<Instant_grade genid_ref="361-&gt;380" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="361-&gt;380" nickname="iceman" value="9"/>
<Instant_grade genid_ref="361-&gt;380" nickname="ireal" value="10"/>
<Instant_grade genid_ref="361-&gt;380" nickname="spider" value="10"/>
<Instant_grade genid_ref="381-&gt;400" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="381-&gt;400" nickname="iceman" value="10"/>
<Instant_grade genid_ref="381-&gt;400" nickname="ireal" value="9"/>
<Instant_grade genid_ref="381-&gt;400" nickname="spider" value="10"/>
<Instant_grade genid_ref="401-&gt;420" nickname="klimberu" value="9"/>
<Instant_grade genid_ref="401-&gt;420" nickname="iceman" value="10"/>
<Instant_grade genid_ref="401-&gt;420" nickname="ireal" value="10"/>
<Instant_grade genid_ref="401-&gt;420" nickname="spider" value="10"/>
<Instant_grade genid_ref="421-&gt;440" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="421-&gt;440" nickname="iceman" value="10"/>
<Instant_grade genid_ref="421-&gt;440" nickname="ireal" value="9"/>
<Instant_grade genid_ref="421-&gt;440" nickname="spider" value="10"/>
<Instant_grade genid_ref="441-&gt;460" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="441-&gt;460" nickname="iceman" value="10"/>
<Instant_grade genid_ref="441-&gt;460" nickname="ireal" value="10"/>
<Instant_grade genid_ref="441-&gt;460" nickname="spider" value="10"/>
<Instant_grade genid_ref="461-&gt;480" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="461-&gt;480" nickname="iceman" value="10"/>
<Instant_grade genid_ref="461-&gt;480" nickname="ireal" value="10"/>
<Instant_grade genid_ref="461-&gt;480" nickname="spider" value="10"/>
<Instant_grade genid_ref="481-&gt;500" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="481-&gt;500" nickname="iceman" value="10"/>
<Instant_grade genid_ref="481-&gt;500" nickname="spider" value="10"/>
<Instant_grade genid_ref="501-&gt;520" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="501-&gt;520" nickname="iceman" value="10"/>
<Instant_grade genid_ref="501-&gt;520" nickname="ireal" value="10"/>
<Instant_grade genid_ref="501-&gt;520" nickname="spider" value="10"/>
<Instant_grade genid_ref="521-&gt;525" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="521-&gt;525" nickname="iceman" value="10"/>
<Instant_grade genid_ref="521-&gt;525" nickname="ireal" value="10"/>
<Instant_grade genid_ref="521-&gt;525" nickname="spider" value="10"/>
<Instant_grade genid_ref="20" nickname="spider" value="10"/>
<Instant_grade genid_ref="24" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="28" nickname="klimberu" value="7"/>
<Instant_grade genid_ref="29" nickname="klimberu" value="3"/>
<Instant_grade genid_ref="30" nickname="spider" value="9"/>
<Instant_grade genid_ref="31" nickname="klimberu" value="2"/>
<Instant_grade genid_ref="32" nickname="ireal" value="10"/>
<Instant_grade genid_ref="36" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="38" nickname="spider" value="9"/>
<Instant_grade genid_ref="44" nickname="ireal" value="5"/>
<Instant_grade genid_ref="45" nickname="klimberu" value="5"/>
<Instant_grade genid_ref="46" nickname="spider" value="9"/>
<Instant_grade genid_ref="48" nickname="klimberu" value="7"/>
<Instant_grade genid_ref="49" nickname="spider" value="9"/>
<Instant_grade genid_ref="50" nickname="klimberu" value="9"/>
<Instant_grade genid_ref="52" nickname="ireal" value="10"/>
<Instant_grade genid_ref="53" nickname="klimberu" value="5"/>
<Instant_grade genid_ref="58" nickname="spider" value="10"/>
<Instant_grade genid_ref="59" nickname="spider" value="9"/>
<Instant_grade genid_ref="61" nickname="ireal" value="10"/>
<Instant_grade genid_ref="62" nickname="spider" value="10"/>
<Instant_grade genid_ref="63" nickname="spider" value="10"/>
<Instant_grade genid_ref="64" nickname="spider" value="9"/>
<Instant_grade genid_ref="65" nickname="iceman" value="10"/>
<Instant_grade genid_ref="66" nickname="spider" value="10"/>
<Instant_grade genid_ref="68" nickname="spider" value="10"/>
<Instant_grade genid_ref="69" nickname="ireal" value="10"/>
<Instant_grade genid_ref="71" nickname="ireal" value="10"/>
<Instant_grade genid_ref="72" nickname="spider" value="10"/>
<Instant_grade genid_ref="73" nickname="spider" value="10"/>
<Instant_grade genid_ref="75" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="76" nickname="spider" value="10"/>
<Instant_grade genid_ref="77" nickname="spider" value="10"/>
<Instant_grade genid_ref="78" nickname="spider" value="9"/>
<Instant_grade genid_ref="79" nickname="spider" value="8"/>
<Instant_grade genid_ref="80" nickname="ireal" value="10"/>
<Instant_grade genid_ref="84" nickname="spider" value="10"/>
<Instant_grade genid_ref="87" nickname="spider" value="9"/>
<Instant_grade genid_ref="88" nickname="klimberu" value="9"/>
<Instant_grade genid_ref="89" nickname="spider" value="9"/>
<Instant_grade genid_ref="100" nickname="ireal" value="10"/>
<Instant_grade genid_ref="102" nickname="ireal" value="7"/>
<Instant_grade genid_ref="104" nickname="ireal" value="7"/>
<Instant_grade genid_ref="106" nickname="ireal" value="10"/>
<Instant_grade genid_ref="108" nickname="spider" value="5"/>
<Instant_grade genid_ref="110" nickname="ireal" value="9"/>
<Instant_grade genid_ref="112" nickname="ireal" value="4"/>
<Instant_grade genid_ref="113" nickname="iceman" value="9"/>
<Instant_grade genid_ref="114" nickname="ireal" value="10"/>
<Instant_grade genid_ref="116" nickname="ireal" value="9"/>
<Instant_grade genid_ref="117" nickname="spider" value="10"/>
<Instant_grade genid_ref="120" nickname="ireal" value="10"/>
<Instant_grade genid_ref="121" nickname="spider" value="10"/>
<Instant_grade genid_ref="122" nickname="ireal" value="6"/>
<Instant_grade genid_ref="123" nickname="klimberu" value="7"/>
<Instant_grade genid_ref="126" nickname="spider" value="7"/>
<Instant_grade genid_ref="131" nickname="spider" value="9"/>
<Instant_grade genid_ref="132" nickname="iceman" value="6"/>
<Instant_grade genid_ref="133" nickname="spider" value="8"/>
<Instant_grade genid_ref="135" nickname="ireal" value="7"/>
<Instant_grade genid_ref="137" nickname="spider" value="9"/>
<Instant_grade genid_ref="140" nickname="klimberu" value="9"/>
<Instant_grade genid_ref="147" nickname="spider" value="7"/>
<Instant_grade genid_ref="148" nickname="klimberu" value="5"/>
<Instant_grade genid_ref="149" nickname="ireal" value="9"/>
<Instant_grade genid_ref="154" nickname="klimberu" value="9"/>
<Instant_grade genid_ref="156" nickname="spider" value="10"/>
<Instant_grade genid_ref="159" nickname="ireal" value="10"/>
<Instant_grade genid_ref="160" nickname="ireal" value="9"/>
<Instant_grade genid_ref="169" nickname="ireal" value="9"/>
<Instant_grade genid_ref="173" nickname="spider" value="10"/>
<Instant_grade genid_ref="176" nickname="spider" value="10"/>
<Instant_grade genid_ref="181" nickname="ireal" value="9"/>
<Instant_grade genid_ref="188" nickname="ireal" value="7"/>
<Instant_grade genid_ref="190" nickname="spider" value="9"/>
<Instant_grade genid_ref="192" nickname="spider" value="9"/>
<Instant_grade genid_ref="194" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="196" nickname="spider" value="10"/>
<Instant_grade genid_ref="199" nickname="ireal" value="5"/>
<Instant_grade genid_ref="201" nickname="ireal" value="9"/>
<Instant_grade genid_ref="202" nickname="spider" value="10"/>
<Instant_grade genid_ref="211" nickname="iceman" value="10"/>
<Instant_grade genid_ref="213" nickname="iceman" value="10"/>
<Instant_grade genid_ref="214" nickname="spider" value="8"/>
<Instant_grade genid_ref="215" nickname="iceman" value="9"/>
<Instant_grade genid_ref="221" nickname="iceman" value="8"/>
<Instant_grade genid_ref="228" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="232" nickname="iceman" value="7"/>
<Instant_grade genid_ref="233" nickname="iceman" value="10"/>
<Instant_grade genid_ref="234" nickname="iceman" value="10"/>
<Instant_grade genid_ref="235" nickname="iceman" value="5"/>
<Instant_grade genid_ref="236" nickname="ireal" value="10"/>
<Instant_grade genid_ref="237" nickname="spider" value="8"/>
<Instant_grade genid_ref="238" nickname="spider" value="10"/>
<Instant_grade genid_ref="239" nickname="iceman" value="8"/>
<Instant_grade genid_ref="241" nickname="iceman" value="10"/>
<Instant_grade genid_ref="242" nickname="spider" value="10"/>
<Instant_grade genid_ref="245" nickname="iceman" value="9"/>
<Instant_grade genid_ref="246" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="247" nickname="iceman" value="7"/>
<Instant_grade genid_ref="248" nickname="spider" value="9"/>
<Instant_grade genid_ref="250" nickname="ireal" value="7"/>
<Instant_grade genid_ref="253" nickname="spider" value="9"/>
<Instant_grade genid_ref="254" nickname="iceman" value="9"/>
<Instant_grade genid_ref="255" nickname="spider" value="10"/>
<Instant_grade genid_ref="258" nickname="iceman" value="10"/>
<Instant_grade genid_ref="260" nickname="spider" value="9"/>
<Instant_grade genid_ref="263" nickname="iceman" value="10"/>
<Instant_grade genid_ref="265" nickname="spider" value="10"/>
<Instant_grade genid_ref="267" nickname="iceman" value="9"/>
<Instant_grade genid_ref="269" nickname="spider" value="10"/>
<Instant_grade genid_ref="271" nickname="spider" value="8"/>
<Instant_grade genid_ref="273" nickname="iceman" value="8"/>
<Instant_grade genid_ref="304" nickname="iceman" value="10"/>
<Instant_grade genid_ref="308" nickname="spider" value="9"/>
<Instant_grade genid_ref="309" nickname="iceman" value="10"/>
<Instant_grade genid_ref="310" nickname="spider" value="9"/>
<Instant_grade genid_ref="314" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="317" nickname="spider" value="10"/>
<Instant_grade genid_ref="319" nickname="spider" value="9"/>
<Instant_grade genid_ref="320" nickname="ireal" value="10"/>
<Instant_grade genid_ref="321" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="323" nickname="iceman" value="10"/>
<Instant_grade genid_ref="324" nickname="spider" value="10"/>
<Instant_grade genid_ref="325" nickname="iceman" value="8"/>
<Instant_grade genid_ref="326" nickname="spider" value="8"/>
<Instant_grade genid_ref="327" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="328" nickname="iceman" value="10"/>
<Instant_grade genid_ref="330" nickname="klimberu" value="9"/>
<Instant_grade genid_ref="331" nickname="spider" value="10"/>
<Instant_grade genid_ref="334" nickname="ireal" value="10"/>
<Instant_grade genid_ref="335" nickname="spider" value="9"/>
<Instant_grade genid_ref="336" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="340" nickname="spider" value="9"/>
<Instant_grade genid_ref="341" nickname="iceman" value="10"/>
<Instant_grade genid_ref="345" nickname="ireal" value="10"/>
<Instant_grade genid_ref="351" nickname="spider" value="10"/>
<Instant_grade genid_ref="355" nickname="spider" value="9"/>
<Instant_grade genid_ref="358" nickname="iceman" value="10"/>
<Instant_grade genid_ref="363" nickname="spider" value="7"/>
<Instant_grade genid_ref="365" nickname="iceman" value="9"/>
<Instant_grade genid_ref="374" nickname="spider" value="10"/>
<Instant_grade genid_ref="376" nickname="iceman" value="10"/>
<Instant_grade genid_ref="377" nickname="spider" value="10"/>
<Instant_grade genid_ref="378" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="380" nickname="spider" value="10"/>
<Instant_grade genid_ref="384" nickname="ireal" value="9"/>
<Instant_grade genid_ref="386" nickname="spider" value="10"/>
<Instant_grade genid_ref="387" nickname="ireal" value="8"/>
<Instant_grade genid_ref="390" nickname="klimberu" value="8"/>
<Instant_grade genid_ref="396" nickname="ireal" value="8"/>
<Instant_grade genid_ref="398" nickname="spider" value="9"/>
<Instant_grade genid_ref="408" nickname="spider" value="9"/>
<Instant_grade genid_ref="411" nickname="iceman" value="7"/>
<Instant_grade genid_ref="416" nickname="spider" value="9"/>
<Instant_grade genid_ref="420" nickname="iceman" value="9"/>
<Instant_grade genid_ref="426" nickname="ireal" value="10"/>
<Instant_grade genid_ref="436" nickname="klimberu" value="9"/>
<Instant_grade genid_ref="442" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="447" nickname="ireal" value="8"/>
<Instant_grade genid_ref="451" nickname="ireal" value="6"/>
<Instant_grade genid_ref="454" nickname="spider" value="8"/>
<Instant_grade genid_ref="456" nickname="spider" value="10"/>
<Instant_grade genid_ref="461" nickname="spider" value="9"/>
<Instant_grade genid_ref="463" nickname="spider" value="10"/>
<Instant_grade genid_ref="468" nickname="spider" value="9"/>
<Instant_grade genid_ref="470" nickname="klimberu" value="9"/>
<Instant_grade genid_ref="485" nickname="spider" value="10"/>
<Instant_grade genid_ref="489" nickname="klimberu" value="10"/>
<Instant_grade genid_ref="498" nickname="iceman" value="10"/>
</Grades>
<Collab_regions>
<Collab_region end_genid_ref="19" start_genid_ref="9"/>
<Collab_region end_genid_ref="35" start_genid_ref="30"/>
<Collab_region end_genid_ref="43" start_genid_ref="38"/>
<Collab_region end_genid_ref="52" start_genid_ref="49"/>
<Collab_region end_genid_ref="90" start_genid_ref="61"/>
<Collab_region end_genid_ref="200" start_genid_ref="108"/>
<Collab_region end_genid_ref="278" start_genid_ref="237"/>
<Collab_region end_genid_ref="316" start_genid_ref="300"/>
<Collab_region end_genid_ref="448" start_genid_ref="317"/>
<Collab_region end_genid_ref="500" start_genid_ref="449"/>
</Collab_regions>
<Implicit_refs>
<Implicit_ref from_genid_ref="7" to_genid_ref="8">
<From_text>hello</From_text>
<To_text>hi</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="9" to_genid_ref="10">
<From_text>shall we</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>shall we ... ? - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="9" to_genid_ref="11">
<From_text>shall we start</From_text>
<To_text>i will start first</To_text>
<Type>elaboration</Type>
<Pattern>shall we ... - i will ... first</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="9" to_genid_ref="12">
<From_text>shall we</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>shall we ... ? - yes, let's</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="11" to_genid_ref="13">
<From_text>first</From_text>
<To_text>My name is</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="13" to_genid_ref="14">
<From_text>My name is</From_text>
<To_text>hi</To_text>
<Type>my name is ... - hi ... my name is</Type>
<Pattern>answer</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="9" to_genid_ref="15">
<From_text>start</From_text>
<To_text>hello</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="9" to_genid_ref="16">
<From_text>start</From_text>
<To_text>hello</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="13" to_genid_ref="17">
<From_text>my name is</From_text>
<To_text>meet</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="17" to_genid_ref="18">
<From_text>nice</From_text>
<To_text>the same</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="17" to_genid_ref="19">
<From_text>nice to</From_text>
<To_text>too</To_text>
<Type>confirmation</Type>
<Pattern>nice to ... - ... too</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="20" to_genid_ref="21">
<From_text>i propose</From_text>
<To_text>i agree</To_text>
<Type>confirmation</Type>
<Pattern>i propose ... - i agree ...</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="20" to_genid_ref="22">
<From_text>presented</From_text>
<To_text>in the order</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="20" to_genid_ref="23">
<From_text>i propose</From_text>
<To_text>so</To_text>
<Type>consequence</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="23" to_genid_ref="24">
<From_text>Bayes</From_text>
<To_text>Bayes</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="24" to_genid_ref="25">
<From_text>technique</From_text>
<To_text>it</To_text>
<Type>anaphor</Type>
<Pattern>... - it</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="25" to_genid_ref="26">
<From_text>Bayes' Theorem</From_text>
<To_text>This theorem</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="28" to_genid_ref="29">
<From_text>The theorem says</From_text>
<To_text>so</To_text>
<Type>consequence</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="28" to_genid_ref="30">
<From_text>The theorem says</From_text>
<To_text>these formulas</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="24" to_genid_ref="31">
<From_text>Naive Bayes</From_text>
<To_text>the algorithm</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="30" to_genid_ref="32">
<From_text>intervene</From_text>
<To_text>and then</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="32" to_genid_ref="33">
<From_text>we should</From_text>
<To_text>i will</To_text>
<Type>consequence</Type>
<Pattern>we should ... - i will</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="33" to_genid_ref="34">
<From_text>i will</From_text>
<To_text>proceed</To_text>
<Type>confirmation</Type>
<Pattern>i will ... - proceed</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="33" to_genid_ref="35">
<From_text>i will</From_text>
<To_text>go on</To_text>
<Type>confirmation</Type>
<Pattern>i will ... - go on</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="31" to_genid_ref="36">
<From_text>is linear</From_text>
<To_text>Another advantage</To_text>
<Type>enumeration</Type>
<Pattern>is ... - another</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="24" to_genid_ref="36">
<From_text>Naive Bayes</From_text>
<To_text>the algorithm</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="36" to_genid_ref="37">
<From_text>is</From_text>
<To_text>Despite this</To_text>
<Type>contrast</Type>
<Pattern>is ... - Despite this</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="37" to_genid_ref="38">
<From_text>can</From_text>
<To_text>right?</To_text>
<Type>answer</Type>
<Pattern>can - of course, ... right?</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="38" to_genid_ref="39">
<From_text>right?</From_text>
<To_text>yes</To_text>
<Type>answer</Type>
<Pattern>right? - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="38" to_genid_ref="43">
<From_text>right?</From_text>
<To_text>sorry</To_text>
<Type>answer</Type>
<Pattern>right? - sorry</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="43" to_genid_ref="44">
<From_text>sorry,</From_text>
<To_text>i think</To_text>
<Type>negation</Type>
<Pattern>sorry, i think</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="36" to_genid_ref="45">
<From_text>Another</From_text>
<To_text>the last but not the least</To_text>
<Type>enumeration</Type>
<Pattern>another - the last but not the least</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="44" to_genid_ref="46">
<From_text>i think</From_text>
<To_text>i think</To_text>
<Type>answer</Type>
<Pattern>i think - i think</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="46" to_genid_ref="47">
<From_text>i think</From_text>
<To_text>ok</To_text>
<Type>confirmation</Type>
<Pattern>i think - ok</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="45" to_genid_ref="48">
<From_text>on</From_text>
<To_text>For example</To_text>
<Type>elaboration</Type>
<Pattern>on ... - for example</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="46" to_genid_ref="49">
<From_text>important things</From_text>
<To_text>for example</To_text>
<Type>elaboration</Type>
<Pattern>things ... - for example</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="48" to_genid_ref="50">
<From_text>for example</From_text>
<To_text>furthermore</To_text>
<Type>elaboration</Type>
<Pattern>for example - furthermore</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="50" to_genid_ref="51">
<From_text>it requires</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="50" to_genid_ref="52">
<From_text>amount of</From_text>
<To_text>how many</To_text>
<Type>question</Type>
<Pattern>amount of - how many</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="50" to_genid_ref="53">
<From_text>furthermore</From_text>
<To_text>for now</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="53" to_genid_ref="54">
<From_text>for now</From_text>
<To_text>then i shall</To_text>
<Type>consequence</Type>
<Pattern>for now - then i shall</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="54" to_genid_ref="55">
<From_text>i shall start</From_text>
<To_text>ok?</To_text>
<Type>question</Type>
<Pattern>i shall - ok?</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="54" to_genid_ref="55">
<From_text>i shall</From_text>
<To_text>is that</To_text>
<Type>anaphor</Type>
<Pattern>i shall - is that</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="55" to_genid_ref="56">
<From_text>ok?</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>ok? - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="55" to_genid_ref="57">
<From_text>ok?</From_text>
<To_text>i agree</To_text>
<Type>confirmation</Type>
<Pattern>ok? - i agree</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="54" to_genid_ref="58">
<From_text>presentation</From_text>
<To_text>K-means</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="58" to_genid_ref="59">
<From_text>technique</From_text>
<To_text>it</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="58" to_genid_ref="59">
<From_text>K</From_text>
<To_text>k</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="58" to_genid_ref="59">
<From_text>K-means</From_text>
<To_text>therefore the name</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="59" to_genid_ref="60">
<From_text>clusters</From_text>
<To_text>each</To_text>
<Type>elaboration</Type>
<Pattern>... - each</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="59" to_genid_ref="61">
<From_text>k</From_text>
<To_text>k and n</To_text>
<Type>question</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="59" to_genid_ref="62">
<From_text>clusters</From_text>
<To_text>the clusters</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="61" to_genid_ref="63">
<From_text>are</From_text>
<To_text>yes</To_text>
<Type>answer</Type>
<Pattern>are ... ? - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="63" to_genid_ref="64">
<From_text>yes</From_text>
<To_text>is actually</To_text>
<Type>elaboration</Type>
<Pattern>yes - is actually</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="61" to_genid_ref="65">
<From_text>k and n</From_text>
<To_text>them</To_text>
<Type>anaphor</Type>
<Pattern>... and ... - them</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="64" to_genid_ref="66">
<From_text>is</From_text>
<To_text>and</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="65" to_genid_ref="68">
<From_text>is there any restriction</From_text>
<To_text>no restriction whatsoever</To_text>
<Type>negation</Type>
<Pattern>is there any ... - no ... whatsoever</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="68" to_genid_ref="69">
<From_text>problem is</From_text>
<To_text>i see</To_text>
<Type>confirmation</Type>
<Pattern>... - i see</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="68" to_genid_ref="70">
<From_text>no</From_text>
<To_text>i see</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="68" to_genid_ref="71">
<From_text>the algorithm</From_text>
<To_text>is it</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="58" to_genid_ref="72">
<From_text>technique</From_text>
<To_text>the algorithm</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="71" to_genid_ref="73">
<From_text>is it</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>is it - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="71" to_genid_ref="73">
<From_text>is it</From_text>
<To_text>but</To_text>
<Type>negation</Type>
<Pattern>is it - but</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="73" to_genid_ref="74">
<From_text>but</From_text>
<To_text>which means</To_text>
<Type>elaboration</Type>
<Pattern>but - which means</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="74" to_genid_ref="76">
<From_text>is</From_text>
<To_text>and</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="75" to_genid_ref="77">
<From_text>can</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>can - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="75" to_genid_ref="77">
<From_text>can</From_text>
<To_text>that's the</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="58" to_genid_ref="78">
<From_text>technique</From_text>
<To_text>the algorithm</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="78" to_genid_ref="79">
<From_text>fast</From_text>
<To_text>time</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="78" to_genid_ref="80">
<From_text>the algorithm</From_text>
<To_text>it</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="78" to_genid_ref="81">
<From_text>the algorithm</From_text>
<To_text>the variant</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="80" to_genid_ref="83">
<From_text>what</From_text>
<To_text>you asked</To_text>
<Type>anaphor</Type>
<Pattern>what - you asked</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="80" to_genid_ref="84">
<From_text>applications</From_text>
<To_text>applications</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="84" to_genid_ref="85">
<From_text>applications</From_text>
<To_text>nice</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="84" to_genid_ref="86">
<From_text>applications</From_text>
<To_text>very useful</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="78" to_genid_ref="87">
<From_text>the algorithm</From_text>
<To_text>the algorithm</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="84" to_genid_ref="88">
<From_text>include</From_text>
<To_text>too</To_text>
<Type>elaboration</Type>
<Pattern>include ... - is ... too in</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="88" to_genid_ref="89">
<From_text>it is</From_text>
<To_text>i think</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="89" to_genid_ref="90">
<From_text>I think the algorithm is called Lloyd's</From_text>
<To_text>that's about all</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="90" to_genid_ref="91">
<From_text>all</From_text>
<To_text>ok</To_text>
<Type>confirmation</Type>
<Pattern>that's about all - ok</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="90" to_genid_ref="92">
<From_text>all</From_text>
<To_text>now</To_text>
<Type>consequence</Type>
<Pattern>that's about all - now</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="93" to_genid_ref="94">
<From_text>interrupt</From_text>
<To_text>whenever</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="93" to_genid_ref="95">
<From_text>feel free to</From_text>
<To_text>ok, we will</To_text>
<Type>confirmation</Type>
<Pattern>feel free to ... - ok, we will</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="92" to_genid_ref="96">
<From_text>now</From_text>
<To_text>so</To_text>
<Type>consequence</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="96" to_genid_ref="97">
<From_text>are you</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="97" to_genid_ref="98">
<From_text>please</From_text>
<To_text>ok</To_text>
<Type>confirmation</Type>
<Pattern>please - ok</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="97" to_genid_ref="99">
<From_text>please</From_text>
<To_text>yes, please</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="92" to_genid_ref="100">
<From_text>algorithm</From_text>
<To_text>algorithm</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="96" to_genid_ref="101">
<From_text>are you</From_text>
<To_text>yes, please</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="100" to_genid_ref="102">
<From_text>algorithm</From_text>
<To_text>it</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="100" to_genid_ref="102">
<From_text>algorithm</From_text>
<To_text>it</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="102" to_genid_ref="103">
<From_text>what</From_text>
<To_text>objects</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="104" to_genid_ref="105">
<From_text>how</From_text>
<To_text>using</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="100" to_genid_ref="106">
<From_text>algorithm</From_text>
<To_text>the input</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="106" to_genid_ref="107">
<From_text>vectors</From_text>
<To_text>space</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="107" to_genid_ref="108">
<From_text>space</From_text>
<To_text>what</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="108" to_genid_ref="109">
<From_text>need to</From_text>
<To_text>finished</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="106" to_genid_ref="110">
<From_text>viewed</From_text>
<To_text>this</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="110" to_genid_ref="111">
<From_text>generic</From_text>
<To_text>all sort of</To_text>
<Type>consequence</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="110" to_genid_ref="113">
<From_text>generic</From_text>
<To_text>any</To_text>
<Type>consequence</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="111" to_genid_ref="114">
<From_text>you can</From_text>
<To_text>if</To_text>
<Type>elaboration</Type>
<Pattern>you can ... - if ...</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="112" to_genid_ref="115">
<From_text>from</From_text>
<To_text>practic example</To_text>
<Type>negation</Type>
<Pattern>from ... to ... - practic example</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="115" to_genid_ref="116">
<From_text>is needed</From_text>
<To_text>only</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="115" to_genid_ref="117">
<From_text>needed</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="117" to_genid_ref="118">
<From_text>yes</From_text>
<To_text>exactly</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="116" to_genid_ref="119">
<From_text>find</From_text>
<To_text>so</To_text>
<Type>consequence</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="119" to_genid_ref="120">
<From_text>after you</From_text>
<To_text>you will</To_text>
<Type>consequence</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="120" to_genid_ref="121">
<From_text>margin</From_text>
<To_text>what is a margin</To_text>
<Type>question</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="121" to_genid_ref="122">
<From_text>what is</From_text>
<To_text>is</To_text>
<Type>answer</Type>
<Pattern>what is ... ? - is</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="120" to_genid_ref="123">
<From_text>two</From_text>
<To_text>so, you can</To_text>
<Type>consequence</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="123" to_genid_ref="124">
<From_text>how</From_text>
<To_text>iteratively</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="124" to_genid_ref="125">
<From_text>iteratively</From_text>
<To_text>example</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="122" to_genid_ref="126">
<From_text>is a</From_text>
<To_text>but</To_text>
<Type>negation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="125" to_genid_ref="127">
<From_text>for example</From_text>
<To_text>you start</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="127" to_genid_ref="129">
<From_text>you start</From_text>
<To_text>and</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="129" to_genid_ref="130">
<From_text>sets</From_text>
<To_text>every set</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="126" to_genid_ref="128">
<From_text>A</From_text>
<To_text>A | B</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="126" to_genid_ref="131">
<From_text>distance</From_text>
<To_text>point</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="131" to_genid_ref="132">
<From_text>distance</From_text>
<To_text>n-spaced</To_text>
<Type>negation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="132" to_genid_ref="133">
<From_text>n-spaced</From_text>
<To_text>hiperplane</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="132" to_genid_ref="134">
<From_text>weren't</From_text>
<To_text>now</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="134" to_genid_ref="136">
<From_text>understand</From_text>
<To_text>understand</To_text>
<Type>confirmation</Type>
<Pattern>now you understand - i understand</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="133" to_genid_ref="137">
<From_text>hiperplane</From_text>
<To_text>n-dimensional</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="137" to_genid_ref="138">
<From_text>we can  understand</From_text>
<To_text>support</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="137" to_genid_ref="139">
<From_text>understand</From_text>
<To_text>understood</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="139" to_genid_ref="140">
<From_text>yes</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="120" to_genid_ref="141">
<From_text>hyperplan</From_text>
<To_text>wasn't clear</To_text>
<Type>negation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="100" to_genid_ref="143">
<From_text>algorithm</From_text>
<To_text>this algorithm</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="143" to_genid_ref="144">
<From_text>used for</From_text>
<To_text>any clues</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="144" to_genid_ref="145">
<From_text>any clues</From_text>
<To_text>i'd say</To_text>
<Type>answer</Type>
<Pattern>any clues - i'd say</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="144" to_genid_ref="146">
<From_text>any clues</From_text>
<To_text>was asking</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="146" to_genid_ref="147">
<From_text>practical usage</From_text>
<To_text>collision detection</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="146" to_genid_ref="148">
<From_text>asking for</From_text>
<To_text>where</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="146" to_genid_ref="149">
<From_text>practical usage</From_text>
<To_text>is used</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="149" to_genid_ref="150">
<From_text>Reuters</From_text>
<To_text>that</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="149" to_genid_ref="151">
<From_text>used</From_text>
<To_text>to</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="149" to_genid_ref="152">
<From_text>used</From_text>
<To_text>amazing</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="149" to_genid_ref="153">
<From_text>Reuters</From_text>
<To_text>they</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="100" to_genid_ref="154">
<From_text>algorithm</From_text>
<To_text>algorithm</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="100" to_genid_ref="155">
<From_text>algorithm</From_text>
<To_text>this algorithm</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="157" to_genid_ref="159">
<From_text>category</From_text>
<To_text>category</To_text>
<Type>answer</Type>
<Pattern>what if ... - you can</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="159" to_genid_ref="160">
<From_text>you can</From_text>
<To_text>for example</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="164" to_genid_ref="165">
<From_text>categories</From_text>
<To_text>categories</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="165" to_genid_ref="167">
<From_text>we can</From_text>
<To_text>can do this</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="173" to_genid_ref="175">
<From_text>speed</From_text>
<To_text>regarding speed</To_text>
<Type>answer</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="175" to_genid_ref="179">
<From_text>regarding</From_text>
<To_text>it is</To_text>
<Type>elaboration</Type>
<Pattern>regarding - it is</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="176" to_genid_ref="184">
<From_text>involves</From_text>
<To_text>right</To_text>
<Type>confirmation</Type>
<Pattern>it ... - yes, you are right</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="176" to_genid_ref="185">
<From_text>involves</From_text>
<To_text>involves</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="185" to_genid_ref="186">
<From_text>it involves</From_text>
<To_text>so</To_text>
<Type>consequence</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="186" to_genid_ref="187">
<From_text>so</From_text>
<To_text>exactly</To_text>
<Type>confirmation</Type>
<Pattern>so ... - exactly</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="186" to_genid_ref="188">
<From_text>so</From_text>
<To_text>but</To_text>
<Type>negation</Type>
<Pattern>so ... - but ...</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="188" to_genid_ref="190">
<From_text>impressive</From_text>
<To_text>obviously</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="195" to_genid_ref="196">
<From_text>final</From_text>
<To_text>ok</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="196" to_genid_ref="197">
<From_text>we should</From_text>
<To_text>of course</To_text>
<Type>confirmation</Type>
<Pattern>we should</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="198" to_genid_ref="199">
<From_text>what</From_text>
<To_text>is that</To_text>
<Type>elaboration</Type>
<Pattern>what ... - is that</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="201" to_genid_ref="202">
<From_text>performance</From_text>
<To_text>on that that</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="202" to_genid_ref="205">
<From_text>later</From_text>
<To_text>ok</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="205" to_genid_ref="206">
<From_text>my turn</From_text>
<To_text>your field</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="207" to_genid_ref="208">
<From_text>ART</From_text>
<To_text>which</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="207" to_genid_ref="209">
<From_text>ART</From_text>
<To_text>Adaptive Resonance Theory</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="214" to_genid_ref="215">
<From_text>i assume</From_text>
<To_text>not so much</To_text>
<Type>negation</Type>
<Pattern>i assume - not</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="217" to_genid_ref="219">
<From_text>if you have</From_text>
<To_text>ok</To_text>
<Type>confirmation</Type>
<Pattern>if you have ... - ok</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="217" to_genid_ref="220">
<From_text>if you have</From_text>
<To_text>ok</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="221" to_genid_ref="222">
<From_text>pieces</From_text>
<To_text>the</To_text>
<Type>enumeration</Type>
<Pattern>pieces - the</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="228" to_genid_ref="230">
<From_text>can you</From_text>
<To_text>of course</To_text>
<Type>confirmation</Type>
<Pattern>can you - of course</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="234" to_genid_ref="235">
<From_text>is</From_text>
<To_text>therefore</To_text>
<Type>consequence</Type>
<Pattern>is ... - therefore</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="236" to_genid_ref="237">
<From_text>how</From_text>
<To_text>basically</To_text>
<Type>answer</Type>
<Pattern>how - basically</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="239" to_genid_ref="240">
<From_text>there is no</From_text>
<To_text>ok</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="239" to_genid_ref="242">
<From_text>there is no</From_text>
<To_text>yeah</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="242" to_genid_ref="243">
<From_text>yeah</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>yeah - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="235" to_genid_ref="244">
<From_text>comparison</From_text>
<To_text>so, after comparison</To_text>
<Type>enumeration</Type>
<Pattern>... - so, after</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="246" to_genid_ref="247">
<From_text>adjusted</From_text>
<To_text>changed</To_text>
<Type>answer</Type>
<Pattern>adjusted - it is changed</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="248" to_genid_ref="249">
<From_text>compute</From_text>
<To_text>calculate</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="250" to_genid_ref="252">
<From_text>mustbe</From_text>
<To_text>of course</To_text>
<Type>confirmation</Type>
<Pattern>must be - of course</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="250" to_genid_ref="253">
<From_text>mustbe</From_text>
<To_text>not really</To_text>
<Type>negation</Type>
<Pattern>must be - not really</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="255" to_genid_ref="256">
<From_text>what about</From_text>
<To_text>it is</To_text>
<Type>confirmation</Type>
<Pattern>what - it is</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="256" to_genid_ref="259">
<From_text>some sort of</From_text>
<To_text>correct</To_text>
<Type>confirmation</Type>
<Pattern>some sort of</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="262" to_genid_ref="263">
<From_text>in the end</From_text>
<To_text>ok, so now</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="263" to_genid_ref="264">
<From_text>if the</From_text>
<To_text>then the</To_text>
<Type>elaboration</Type>
<Pattern>if the - then the</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="267" to_genid_ref="269">
<From_text>then the</From_text>
<To_text>so that must mean</To_text>
<Type>elaboration</Type>
<Pattern>the the - so that must mean</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="269" to_genid_ref="270">
<From_text>must mean</From_text>
<To_text>exactly</To_text>
<Type>confirmation</Type>
<Pattern>must mean - exactly</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="271" to_genid_ref="273">
<From_text>how about</From_text>
<To_text>that was the</To_text>
<Type>answer</Type>
<Pattern>how about - that was the</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="274" to_genid_ref="276">
<From_text>can you</From_text>
<To_text>yes, please</To_text>
<Type>confirmation</Type>
<Pattern>can you - yes, please</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="274" to_genid_ref="277">
<From_text>can you</From_text>
<To_text>sure</To_text>
<Type>confirmation</Type>
<Pattern>can you - sure</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="274" to_genid_ref="278">
<From_text>can you</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>can you - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="279" to_genid_ref="280">
<From_text>applications</From_text>
<To_text>but one</To_text>
<Type>anaphor</Type>
<Pattern>alot of ... - but one</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="295" to_genid_ref="297">
<From_text>everything ok</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>everything ok - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="306" to_genid_ref="307">
<From_text>?</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>? - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="310" to_genid_ref="311">
<From_text>we should</From_text>
<To_text>ok</To_text>
<Type>confirmation</Type>
<Pattern>we should - ok</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="312" to_genid_ref="313">
<From_text>thank you</From_text>
<To_text>you're welcome</To_text>
<Type>answer</Type>
<Pattern>thank you - you're welcome</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="314" to_genid_ref="315">
<From_text>them</From_text>
<To_text>the algorithms</To_text>
<Type>cataphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="314" to_genid_ref="316">
<From_text>it's not</From_text>
<To_text>is</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="317" to_genid_ref="318">
<From_text>i think</From_text>
<To_text>ok</To_text>
<Type>confirmation</Type>
<Pattern>i think - ok</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="317" to_genid_ref="324">
<From_text>criteria</From_text>
<To_text>another criteria</To_text>
<Type>enumeration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="328" to_genid_ref="329">
<From_text>its</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>it's - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="331" to_genid_ref="332">
<From_text>Bayes</From_text>
<To_text>it</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="336" to_genid_ref="338">
<From_text>it</From_text>
<To_text>it</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="338" to_genid_ref="339">
<From_text>didn't imply that</From_text>
<To_text>just that</To_text>
<Type>negation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="341" to_genid_ref="343">
<From_text>are</From_text>
<To_text>i agree</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="348" to_genid_ref="349">
<From_text>agree?</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>agree? - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="347" to_genid_ref="351">
<From_text>simpler than</From_text>
<To_text>no, but</To_text>
<Type>negation</Type>
<Pattern>than ... - no, but</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="351" to_genid_ref="352">
<From_text>but</From_text>
<To_text>that's why</To_text>
<Type>consequence</Type>
<Pattern>but - that's why</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="352" to_genid_ref="353">
<From_text>that's why</From_text>
<To_text>i see</To_text>
<Type>confirmation</Type>
<Pattern>that's why - i see</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="352" to_genid_ref="355">
<From_text>so</From_text>
<To_text>also</To_text>
<Type>elaboration</Type>
<Pattern>so - also</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="355" to_genid_ref="356">
<From_text>i think</From_text>
<To_text>i don't really think so</To_text>
<Type>negation</Type>
<Pattern>i think - i don't really think so</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="357" to_genid_ref="358">
<From_text>i think</From_text>
<To_text>so</To_text>
<Type>consequence</Type>
<Pattern>i think - so</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="361" to_genid_ref="362">
<From_text>can have</From_text>
<To_text>only when</To_text>
<Type>negation</Type>
<Pattern>can have - only when</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="362" to_genid_ref="363">
<From_text>only when</From_text>
<To_text>yeah, but what if</To_text>
<Type>negation</Type>
<Pattern>only when - yeah, but what if</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="363" to_genid_ref="366">
<From_text>it's</From_text>
<To_text>its not</To_text>
<Type>negation</Type>
<Pattern>it's - it's not</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="369" to_genid_ref="371">
<From_text>can you</From_text>
<To_text>i guess</To_text>
<Type>confirmation</Type>
<Pattern>can you - i guess</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="369" to_genid_ref="372">
<From_text>can you</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>can you - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="372" to_genid_ref="373">
<From_text>may be</From_text>
<To_text>although</To_text>
<Type>negation</Type>
<Pattern>may be - although</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="324" to_genid_ref="374">
<From_text>another</From_text>
<To_text>next</To_text>
<Type>enumeration</Type>
<Pattern>another - next</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="388" to_genid_ref="389">
<From_text>can have</From_text>
<To_text>i agree</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="390" to_genid_ref="391">
<From_text>can</From_text>
<To_text>yes, but</To_text>
<Type>negation</Type>
<Pattern>can - yes, but</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="392" to_genid_ref="393">
<From_text>is it</From_text>
<To_text>yeah</To_text>
<Type>confirmation</Type>
<Pattern>is it? - yeah</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="390" to_genid_ref="394">
<From_text>can</From_text>
<To_text>even</To_text>
<Type>elaboration</Type>
<Pattern>can - even</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="402" to_genid_ref="403">
<From_text>i think</From_text>
<To_text>i agree</To_text>
<Type>confirmation</Type>
<Pattern>i think - i agree</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="405" to_genid_ref="406">
<From_text>so</From_text>
<To_text>yeah</To_text>
<Type>confirmation</Type>
<Pattern>so ... ? - yeah</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="407" to_genid_ref="408">
<From_text>any other</From_text>
<To_text>how about</To_text>
<Type>elaboration</Type>
<Pattern>any other ... ? - how about ... ?</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="411" to_genid_ref="413">
<From_text>Fuzzy logic</From_text>
<To_text>this</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="411" to_genid_ref="415">
<From_text>is</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>is - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="415" to_genid_ref="416">
<From_text>yes</From_text>
<To_text>i'm serious</To_text>
<Type>confirmation</Type>
<Pattern>yes - i'm serious</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="417" to_genid_ref="418">
<From_text>can</From_text>
<To_text>yes, i know</To_text>
<Type>confirmation</Type>
<Pattern>can - yes, I know</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="419" to_genid_ref="421">
<From_text>not sure</From_text>
<To_text>doesn't</To_text>
<Type>answer</Type>
<Pattern>not sure - doesn't</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="423" to_genid_ref="424">
<From_text>ok. so</From_text>
<To_text>i agree</To_text>
<Type>confirmation</Type>
<Pattern>ok. so - i agree</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="424" to_genid_ref="425">
<From_text>i agree</From_text>
<To_text>me too</To_text>
<Type>confirmation</Type>
<Pattern>i agree - me too</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="426" to_genid_ref="428">
<From_text>to take advantage of these algorithms i think we should an application that would integrate them</From_text>
<To_text>*create</To_text>
<Type>ellipsis</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="427" to_genid_ref="429">
<From_text>i think</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>i think - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="431" to_genid_ref="433">
<From_text>has</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>has - yes</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="434" to_genid_ref="435">
<From_text>is</From_text>
<To_text>and can be</To_text>
<Type>elaboration</Type>
<Pattern>is - and can be</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="374" to_genid_ref="436">
<From_text>next</From_text>
<To_text>another</To_text>
<Type>enumeration</Type>
<Pattern>next - another</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="427" to_genid_ref="438">
<From_text>could be</From_text>
<To_text>this is not</To_text>
<Type>negation</Type>
<Pattern>could be - this is not</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="439" to_genid_ref="440">
<From_text>what do you say about</From_text>
<To_text>sounds great</To_text>
<Type>confirmation</Type>
<Pattern>what do you say about - sounds great</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="437" to_genid_ref="442">
<From_text>all can</From_text>
<To_text>you seem to</To_text>
<Type>negation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="442" to_genid_ref="444">
<From_text>i believe</From_text>
<To_text>true</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="442" to_genid_ref="445">
<From_text>i believe</From_text>
<To_text>but not</To_text>
<Type>negation</Type>
<Pattern>i believe - not</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="439" to_genid_ref="449">
<From_text>what do you say</From_text>
<To_text>i agree</To_text>
<Type>confirmation</Type>
<Pattern>what do you say - i agree</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="448" to_genid_ref="450">
<From_text>should</From_text>
<To_text>exactly</To_text>
<Type>confirmation</Type>
<Pattern>should - exactly</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="448" to_genid_ref="451">
<From_text>should</From_text>
<To_text>we should</To_text>
<Type>confirmation</Type>
<Pattern>should - we should</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="452" to_genid_ref="453">
<From_text>that</From_text>
<To_text>and</To_text>
<Type>elaboration</Type>
<Pattern>that ... - and ...</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="454" to_genid_ref="455">
<From_text>how about</From_text>
<To_text>great</To_text>
<Type>confirmation</Type>
<Pattern>how about ... ? - great</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="454" to_genid_ref="456">
<From_text>how about</From_text>
<To_text>or</To_text>
<Type>elaboration</Type>
<Pattern>how about ... - or ...</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="457" to_genid_ref="459">
<From_text>you have good ideas</From_text>
<To_text>thank you</To_text>
<Type>answer</Type>
<Pattern>you have good - thank you</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="460" to_genid_ref="461">
<From_text>is</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern>is ... - yes ...</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="460" to_genid_ref="462">
<From_text>is</From_text>
<To_text>i agree</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="463" to_genid_ref="464">
<From_text>we could</From_text>
<To_text>exactly</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="463" to_genid_ref="465">
<From_text>we could</From_text>
<To_text>or</To_text>
<Type>elaboration</Type>
<Pattern>we could - or</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="463" to_genid_ref="466">
<From_text>we could</From_text>
<To_text>the opposite</To_text>
<Type>negation</Type>
<Pattern>we could do - we could do the opposite</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="470" to_genid_ref="471">
<From_text>especially</From_text>
<To_text>true</To_text>
<Type>confirmation</Type>
<Pattern>especially - true</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="470" to_genid_ref="475">
<From_text>especially</From_text>
<To_text>so</To_text>
<Type>consequence</Type>
<Pattern>especially - so</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="476" to_genid_ref="477">
<From_text>i can</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="481" to_genid_ref="482">
<From_text>and</From_text>
<To_text>nice one</To_text>
<Type>confirmation</Type>
<Pattern>and ... - nice one</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="482" to_genid_ref="483">
<From_text>nice one</From_text>
<To_text>thats a great idea</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="484" to_genid_ref="486">
<From_text>i think</From_text>
<To_text>we also</To_text>
<Type>elaboration</Type>
<Pattern>i think - we also</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="491" to_genid_ref="492">
<From_text>up to you</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="491" to_genid_ref="493">
<From_text>up to you</From_text>
<To_text>ok so</To_text>
<Type>consequence</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="489" to_genid_ref="494">
<From_text>100%</From_text>
<To_text>that</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="495" to_genid_ref="496">
<From_text>after that</From_text>
<To_text>we will</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="493" to_genid_ref="497">
<From_text>IIKS</From_text>
<To_text>standing for</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="493" to_genid_ref="499">
<From_text>IIKS</From_text>
<To_text>that</To_text>
<Type>anaphor</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="499" to_genid_ref="500">
<From_text>sounds</From_text>
<To_text>it does</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="501" to_genid_ref="503">
<From_text>i think</From_text>
<To_text>yes</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="507" to_genid_ref="509">
<From_text>this</From_text>
<To_text>good idea</To_text>
<Type>confirmation</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="512" to_genid_ref="513">
<From_text>we need</From_text>
<To_text>and</To_text>
<Type>elaboration</Type>
<Pattern/>
</Implicit_ref>
<Implicit_ref from_genid_ref="513" to_genid_ref="514">
<From_text>i will</From_text>
<To_text>ok</To_text>
<Type>confirmation</Type>
<Pattern>i will - ok</Pattern>
</Implicit_ref>
<Implicit_ref from_genid_ref="518" to_genid_ref="519">
<From_text>good night</From_text>
<To_text>good night to you too</To_text>
<Type>answer</Type>
<Pattern>good night - good night to you too</Pattern>
</Implicit_ref>
</Implicit_refs>
<Comments>
<General_comment/>
</Comments>
</Annotation>
</Dialog>
